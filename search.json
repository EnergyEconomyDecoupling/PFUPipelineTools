[{"path":[]},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement matthew.heun@.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to PFUPipelineTools","title":"Contributing to PFUPipelineTools","text":"document outlines propose change PFUPipelineTools package.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to PFUPipelineTools","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to PFUPipelineTools","text":"want make change bigger fixing typos, first file issue GitHub make sure someone team agrees proposed change needed. ’ve found bug, please file issue illustrates bug minimal reprex.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to PFUPipelineTools","text":"Fork package clone onto computer. Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(). Follow prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e., beneath “always resolves latest release.”).","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to PFUPipelineTools","text":"New code written style matches rest code PFUPipelineTools. use roxygen2, Markdown syntax, documentation.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CONTRIBUTING.html","id":"tests","dir":"","previous_headings":"Bigger changes","what":"Tests","title":"Contributing to PFUPipelineTools","text":"use testthat unit tests. maintain 100% test coverage. Contributions reduce test coverage less 100% rejected.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to PFUPipelineTools","text":"Please note RCLabels project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/CONTRIBUTING.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributing to PFUPipelineTools","text":"guide contributing adapted Contributing guide usethis package.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 PFUPipelineTools authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew Heun. Author, maintainer.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Matthew Kuperus Heun (2025). PFUPipelineTools: Tools PFU Pipelines R package version 0.1.13. https://doi.org/10.5281/zenodo.8226419","code":"@Manual{,   title = {PFUPipelineTools: Tools for PFU Pipelines},   author = {Matthew Kuperus Heun},   year = {2025},   note = {R package version 0.1.13},   url = {https://doi.org/10.5281/zenodo.8226419}, }"},{"path":[]},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/index.html","id":"statement-of-need","dir":"","previous_headings":"","what":"Statement of need","title":"Tools for CL-PFU Database Pipelines","text":"Several packages involved creating CL-PFU database, many packages provide computational pipelines database. pipelines need access common functions, say releasing (saving) computational targets respective pins, reading targets pins, filtering countries years, removing target groupings. package (PFUPipelineTools) addresses need, providing single package several functions used across various CL-PFU database pipelines.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for CL-PFU Database Pipelines","text":"can install development version PFUPipelineTools GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"EnergyEconomyDecoupling/PFUPipelineTools\")"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/index.html","id":"more-information","dir":"","previous_headings":"","what":"More Information","title":"Tools for CL-PFU Database Pipelines","text":"Find information, including vignettes function documentation, https://EnergyEconomyDecoupling.github.io/PFUPipelineTools/.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/agg_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata information for aggregation groups — agg_metadata","title":"Metadata information for aggregation groups — agg_metadata","text":"string list containing metadata information aggregation groups.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/agg_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata information for aggregation groups — agg_metadata","text":"","code":"agg_metadata"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/agg_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Metadata information for aggregation groups — agg_metadata","text":"string list 6 entries. total_value total value. all_value aggregation items. product_value aggregation products. sector_value aggregation across sectors. flow_value aggregation across flows. none aggregation.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/agg_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata information for aggregation groups — agg_metadata","text":"","code":"agg_metadata #> $total_value #> [1] \"Total\" #>  #> $all_value #> [1] \"All\" #>  #> $product_value #> [1] \"Product\" #>  #> $sector_value #> [1] \"Sector\" #>  #> $flow_value #> [1] \"Flow\" #>  #> $none #> [1] \"None\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/aggregation_df_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"PFUAggPipeline data frame column names — aggregation_df_cols","title":"PFUAggPipeline data frame column names — aggregation_df_cols","text":"Aggregation data frame column names","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/aggregation_df_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PFUAggPipeline data frame column names — aggregation_df_cols","text":"","code":"aggregation_df_cols"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/aggregation_df_cols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PFUAggPipeline data frame column names — aggregation_df_cols","text":"string list 9 entries. product_aggregation name metadata column tells product aggregation. \"ProductAggregation\" industry_aggregation name metadata column tells industry aggregation. \"IndustryAggregation\" specified value indicates products industries remain specified. \"Specified\" despecified value indicates products industries despecified aggregated. \"Despecified\" ungrouped value indicates products industries grouped. \"Ungrouped\" grouped value indicates products industries grouped. \"Grouped\" chopped_mat value indicates matrix chopped. \"ChoppedMat\" chopped_var value indicates chopping product industry. \"ChopVar\" product_sector column containing values chopped_var. Recca::aggregate_cols$product_sector.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/aggregation_df_cols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PFUAggPipeline data frame column names — aggregation_df_cols","text":"string list containing names column names values aggregation data frames.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/aggregation_df_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PFUAggPipeline data frame column names — aggregation_df_cols","text":"","code":"aggregation_df_cols #> $product_aggregation #> [1] \"ProductAggregation\" #>  #> $industry_aggregation #> [1] \"IndustryAggregation\" #>  #> $specified #> [1] \"Specified\" #>  #> $despecified #> [1] \"Despecified\" #>  #> $ungrouped #> [1] \"Ungrouped\" #>  #> $grouped #> [1] \"Grouped\" #>  #> $chopped_mat #> [1] \"ChoppedMat\" #>  #> $chopped_var #> [1] \"ChoppedVar\" #>  #> $product_sector #> [1] \"ProductIndustrySector\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/aggregation_file_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregation file column names — aggregation_file_cols","title":"Aggregation file column names — aggregation_file_cols","text":"string list containing aggregation file column names.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/aggregation_file_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregation file column names — aggregation_file_cols","text":"","code":"aggregation_file_cols"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/aggregation_file_cols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Aggregation file column names — aggregation_file_cols","text":"string list 2 entries. many_colname string name many column. \"Many\". few_colname string name column. \"\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/aggregation_file_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregation file column names — aggregation_file_cols","text":"","code":"aggregation_file_cols #> $many_colname #> [1] \"Many\" #>  #> $few_colname #> [1] \"Few\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/aggregation_file_tab_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregation file tab information — aggregation_file_tab_names","title":"Aggregation file tab information — aggregation_file_tab_names","text":"string list containing aggregation file's tab names.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/aggregation_file_tab_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregation file tab information — aggregation_file_tab_names","text":"","code":"aggregation_file_tab_names"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/aggregation_file_tab_names.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Aggregation file tab information — aggregation_file_tab_names","text":"string list 6 entries. region_aggregation name region aggregation tab, \"region_aggregation\". continent_aggregation name continent aggregation tab, \"continent_aggregation\". world_aggregation string name world aggregation tab. \"world_aggregation\". ef_product_aggregation string name final energy product aggregation tab. \"ef_product_aggregation\". eu_product_aggregation string name useful energy product aggregation tab. \"eu_product_aggregation\". ef_sector_aggregation string name final energy sector aggregation tab. \"ef_sector_aggregation\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/aggregation_file_tab_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregation file tab information — aggregation_file_tab_names","text":"","code":"aggregation_file_tab_names #> $region_aggregation #> [1] \"region_aggregation\" #>  #> $continent_aggregation #> [1] \"continent_aggregation\" #>  #> $world_aggregation #> [1] \"world_aggregation\" #>  #> $ef_product_aggregation #> [1] \"ef_product_aggregation\" #>  #> $eu_product_aggregation #> [1] \"eu_product_aggregation\" #>  #> $ef_sector_aggregation #> [1] \"ef_sector_aggregation\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/all_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"Country abbreviations — all_countries","title":"Country abbreviations — all_countries","text":"string list containing known countries abbreviated format. 3-letter codes analyzed separate countries. 3-letter codes conform ISO naming conventions. 4-letter codes ISO codes still analyzed separate countries. 5-letter codes (longer) aggregations.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/all_countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Country abbreviations — all_countries","text":"","code":"all_countries"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/all_countries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Country abbreviations — all_countries","text":"string list 166 entries.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/all_countries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Country abbreviations — all_countries","text":"","code":"all_countries #> $afri #> [1] \"AFRI\" #>  #> $ago #> [1] \"AGO\" #>  #> $alb #> [1] \"ALB\" #>  #> $are #> [1] \"ARE\" #>  #> $arg #> [1] \"ARG\" #>  #> $arm #> [1] \"ARM\" #>  #> $asia #> [1] \"ASIA\" #>  #> $aus #> [1] \"AUS\" #>  #> $aut #> [1] \"AUT\" #>  #> $aze #> [1] \"AZE\" #>  #> $bel #> [1] \"BEL\" #>  #> $ben #> [1] \"BEN\" #>  #> $bgd #> [1] \"BGD\" #>  #> $bgr #> [1] \"BGR\" #>  #> $bhr #> [1] \"BHR\" #>  #> $bih #> [1] \"BIH\" #>  #> $blr #> [1] \"BLR\" #>  #> $bol #> [1] \"BOL\" #>  #> $bra #> [1] \"BRA\" #>  #> $brn #> [1] \"BRN\" #>  #> $bwa #> [1] \"BWA\" #>  #> $bunk #> [1] \"BUNK\" #>  #> $can #> [1] \"CAN\" #>  #> $che #> [1] \"CHE\" #>  #> $chl #> [1] \"CHL\" #>  #> $chnm #> [1] \"CHNM\" #>  #> $cmr #> [1] \"CMR\" #>  #> $cod #> [1] \"COD\" #>  #> $cog #> [1] \"COG\" #>  #> $col #> [1] \"COL\" #>  #> $civ #> [1] \"CIV\" #>  #> $cri #> [1] \"CRI\" #>  #> $cub #> [1] \"CUB\" #>  #> $cuw #> [1] \"CUW\" #>  #> $cyp #> [1] \"CYP\" #>  #> $cze #> [1] \"CZE\" #>  #> $deu #> [1] \"DEU\" #>  #> $dnk #> [1] \"DNK\" #>  #> $dom #> [1] \"DOM\" #>  #> $dza #> [1] \"DZA\" #>  #> $ecu #> [1] \"ECU\" #>  #> $egy #> [1] \"EGY\" #>  #> $eri #> [1] \"ERI\" #>  #> $esp #> [1] \"ESP\" #>  #> $est #> [1] \"EST\" #>  #> $eth #> [1] \"ETH\" #>  #> $eurp #> [1] \"EURP\" #>  #> $fin #> [1] \"FIN\" #>  #> $fra #> [1] \"FRA\" #>  #> $gab #> [1] \"GAB\" #>  #> $gbr #> [1] \"GBR\" #>  #> $geo #> [1] \"GEO\" #>  #> $gha #> [1] \"GHA\" #>  #> $gib #> [1] \"GIB\" #>  #> $gnq #> [1] \"GNQ\" #>  #> $grc #> [1] \"GRC\" #>  #> $gtm #> [1] \"GTM\" #>  #> $guy #> [1] \"GUY\" #>  #> $hkg #> [1] \"HKG\" #>  #> $hnd #> [1] \"HND\" #>  #> $hrv #> [1] \"HRV\" #>  #> $hti #> [1] \"HTI\" #>  #> $hun #> [1] \"HUN\" #>  #> $idn #> [1] \"IDN\" #>  #> $ind #> [1] \"IND\" #>  #> $irl #> [1] \"IRL\" #>  #> $irn #> [1] \"IRN\" #>  #> $irq #> [1] \"IRQ\" #>  #> $isl #> [1] \"ISL\" #>  #> $isr #> [1] \"ISR\" #>  #> $ita #> [1] \"ITA\" #>  #> $jam #> [1] \"JAM\" #>  #> $jor #> [1] \"JOR\" #>  #> $jpn #> [1] \"JPN\" #>  #> $kaz #> [1] \"KAZ\" #>  #> $ken #> [1] \"KEN\" #>  #> $kgz #> [1] \"KGZ\" #>  #> $khm #> [1] \"KHM\" #>  #> $kor #> [1] \"KOR\" #>  #> $kwt #> [1] \"KWT\" #>  #> $lao #> [1] \"LAO\" #>  #> $lbn #> [1] \"LBN\" #>  #> $lby #> [1] \"LBY\" #>  #> $lka #> [1] \"LKA\" #>  #> $ltu #> [1] \"LTU\" #>  #> $lux #> [1] \"LUX\" #>  #> $lva #> [1] \"LVA\" #>  #> $mar #> [1] \"MAR\" #>  #> $mda #> [1] \"MDA\" #>  #> $mdg #> [1] \"MDG\" #>  #> $mex #> [1] \"MEX\" #>  #> $mide #> [1] \"MIDE\" #>  #> $mkd #> [1] \"MKD\" #>  #> $mlt #> [1] \"MLT\" #>  #> $mmr #> [1] \"MMR\" #>  #> $mne #> [1] \"MNE\" #>  #> $mng #> [1] \"MNG\" #>  #> $moz #> [1] \"MOZ\" #>  #> $mus #> [1] \"MUS\" #>  #> $mys #> [1] \"MYS\" #>  #> $nam #> [1] \"NAM\" #>  #> $namr #> [1] \"NAMR\" #>  #> $ner #> [1] \"NER\" #>  #> $nga #> [1] \"NGA\" #>  #> $nic #> [1] \"NIC\" #>  #> $nld #> [1] \"NLD\" #>  #> $nor #> [1] \"NOR\" #>  #> $npl #> [1] \"NPL\" #>  #> $nzl #> [1] \"NZL\" #>  #> $oafr #> [1] \"OAFR\" #>  #> $oasi #> [1] \"OASI\" #>  #> $oamr #> [1] \"OAMR\" #>  #> $ocen #> [1] \"OCEN\" #>  #> $omn #> [1] \"OMN\" #>  #> $pak #> [1] \"PAK\" #>  #> $pan #> [1] \"PAN\" #>  #> $per #> [1] \"PER\" #>  #> $phl #> [1] \"PHL\" #>  #> $pol #> [1] \"POL\" #>  #> $prk #> [1] \"PRK\" #>  #> $prt #> [1] \"PRT\" #>  #> $pry #> [1] \"PRY\" #>  #> $qat #> [1] \"QAT\" #>  #> $rou #> [1] \"ROU\" #>  #> $rus #> [1] \"RUS\" #>  #> $rwa #> [1] \"RWA\" #>  #> $samr #> [1] \"SAMR\" #>  #> $sau #> [1] \"SAU\" #>  #> $sdn #> [1] \"SDN\" #>  #> $sen #> [1] \"SEN\" #>  #> $sgp #> [1] \"SGP\" #>  #> $slv #> [1] \"SLV\" #>  #> $srb #> [1] \"SRB\" #>  #> $ssd #> [1] \"SSD\" #>  #> $sun #> [1] \"SUN\" #>  #> $sur #> [1] \"SUR\" #>  #> $svk #> [1] \"SVK\" #>  #> $svn #> [1] \"SVN\" #>  #> $swe #> [1] \"SWE\" #>  #> $swz #> [1] \"SWZ\" #>  #> $syr #> [1] \"SYR\" #>  #> $tgo #> [1] \"TGO\" #>  #> $tha #> [1] \"THA\" #>  #> $tjk #> [1] \"TJK\" #>  #> $tkm #> [1] \"TKM\" #>  #> $tto #> [1] \"TTO\" #>  #> $tun #> [1] \"TUN\" #>  #> $tur #> [1] \"TUR\" #>  #> $twn #> [1] \"TWN\" #>  #> $tza #> [1] \"TZA\" #>  #> $uga #> [1] \"UGA\" #>  #> $ukr #> [1] \"UKR\" #>  #> $ury #> [1] \"URY\" #>  #> $usa #> [1] \"USA\" #>  #> $uzb #> [1] \"UZB\" #>  #> $ven #> [1] \"VEN\" #>  #> $vnm #> [1] \"VNM\" #>  #> $wabk #> [1] \"WABK\" #>  #> $wrld #> [1] \"WRLD\" #>  #> $wmbk #> [1] \"WMBK\" #>  #> $xkx #> [1] \"XKX\" #>  #> $yem #> [1] \"YEM\" #>  #> $yug #> [1] \"YUG\" #>  #> $zaf #> [1] \"ZAF\" #>  #> $zmb #> [1] \"ZMB\" #>  #> $zwe #> [1] \"ZWE\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/beatles_fk_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Example simple database tables — beatles_fk_tables","title":"Example simple database tables — beatles_fk_tables","text":"named list data frames, foreign key table (fk table) simple information Beatles.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/beatles_fk_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example simple database tables — beatles_fk_tables","text":"","code":"beatles_fk_tables"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/beatles_fk_tables.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example simple database tables — beatles_fk_tables","text":"named list data frames.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/beatles_fk_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example simple database tables — beatles_fk_tables","text":"list correct format function pl_upload_schema_and_simple_tables().","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/beatles_fk_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example simple database tables — beatles_fk_tables","text":"","code":"beatles_fk_tables #> $Member #> # A tibble: 4 × 2 #>   MemberID Member          #>      <int> <chr>           #> 1        1 John Lennon     #> 2        2 Paul McCartney  #> 3        3 George Harrison #> 4        4 Ringo Starr     #>  #> $Role #> # A tibble: 4 × 2 #>   RoleID Role        #>    <int> <chr>       #> 1      1 Lead singer #> 2      2 Bassist     #> 3      3 Guitarist   #> 4      4 Drummer     #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/beatles_schema_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Example database schema table — beatles_schema_table","title":"Example database schema table — beatles_schema_table","text":"data frame containing several columns describe database schema simple facts Beatles.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/beatles_schema_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example database schema table — beatles_schema_table","text":"","code":"beatles_schema_table"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/beatles_schema_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example database schema table — beatles_schema_table","text":"data frame columns \"Table\", \"colname\", \"coldatatype\", \"fk.table\", \"fk.colname\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/beatles_schema_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example database schema table — beatles_schema_table","text":"","code":"beatles_schema_table #> # A tibble: 6 × 6 #>   Table      Colname  IsPK  ColDataType FKTable FKColname #>   <chr>      <chr>    <lgl> <chr>       <chr>   <chr>     #> 1 Member     MemberID TRUE  int         NA      NA        #> 2 Member     Member   FALSE text        NA      NA        #> 3 Role       RoleID   TRUE  int         NA      NA        #> 4 Role       Role     FALSE text        NA      NA        #> 5 MemberRole Member   TRUE  int         Member  MemberID  #> 6 MemberRole Role     FALSE int         Role    RoleID"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/canonical_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"Canonical countries — canonical_countries","title":"Canonical countries — canonical_countries","text":"string list containing abbreviated names canonical countries. Canonical countries set difference all_countries double-counted_countries.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/canonical_countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canonical countries — canonical_countries","text":"","code":"canonical_countries"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/canonical_countries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Canonical countries — canonical_countries","text":"string list 157 entries.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/canonical_countries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Canonical countries — canonical_countries","text":"","code":"canonical_countries #> $ago #> [1] \"AGO\" #>  #> $alb #> [1] \"ALB\" #>  #> $are #> [1] \"ARE\" #>  #> $arg #> [1] \"ARG\" #>  #> $arm #> [1] \"ARM\" #>  #> $aus #> [1] \"AUS\" #>  #> $aut #> [1] \"AUT\" #>  #> $aze #> [1] \"AZE\" #>  #> $bel #> [1] \"BEL\" #>  #> $ben #> [1] \"BEN\" #>  #> $bgd #> [1] \"BGD\" #>  #> $bgr #> [1] \"BGR\" #>  #> $bhr #> [1] \"BHR\" #>  #> $bih #> [1] \"BIH\" #>  #> $blr #> [1] \"BLR\" #>  #> $bol #> [1] \"BOL\" #>  #> $bra #> [1] \"BRA\" #>  #> $brn #> [1] \"BRN\" #>  #> $bwa #> [1] \"BWA\" #>  #> $can #> [1] \"CAN\" #>  #> $che #> [1] \"CHE\" #>  #> $chl #> [1] \"CHL\" #>  #> $chnm #> [1] \"CHNM\" #>  #> $cmr #> [1] \"CMR\" #>  #> $cod #> [1] \"COD\" #>  #> $cog #> [1] \"COG\" #>  #> $col #> [1] \"COL\" #>  #> $civ #> [1] \"CIV\" #>  #> $cri #> [1] \"CRI\" #>  #> $cub #> [1] \"CUB\" #>  #> $cuw #> [1] \"CUW\" #>  #> $cyp #> [1] \"CYP\" #>  #> $cze #> [1] \"CZE\" #>  #> $deu #> [1] \"DEU\" #>  #> $dnk #> [1] \"DNK\" #>  #> $dom #> [1] \"DOM\" #>  #> $dza #> [1] \"DZA\" #>  #> $ecu #> [1] \"ECU\" #>  #> $egy #> [1] \"EGY\" #>  #> $eri #> [1] \"ERI\" #>  #> $esp #> [1] \"ESP\" #>  #> $est #> [1] \"EST\" #>  #> $eth #> [1] \"ETH\" #>  #> $fin #> [1] \"FIN\" #>  #> $fra #> [1] \"FRA\" #>  #> $gab #> [1] \"GAB\" #>  #> $gbr #> [1] \"GBR\" #>  #> $geo #> [1] \"GEO\" #>  #> $gha #> [1] \"GHA\" #>  #> $gib #> [1] \"GIB\" #>  #> $gnq #> [1] \"GNQ\" #>  #> $grc #> [1] \"GRC\" #>  #> $gtm #> [1] \"GTM\" #>  #> $guy #> [1] \"GUY\" #>  #> $hkg #> [1] \"HKG\" #>  #> $hnd #> [1] \"HND\" #>  #> $hrv #> [1] \"HRV\" #>  #> $hti #> [1] \"HTI\" #>  #> $hun #> [1] \"HUN\" #>  #> $idn #> [1] \"IDN\" #>  #> $ind #> [1] \"IND\" #>  #> $irl #> [1] \"IRL\" #>  #> $irn #> [1] \"IRN\" #>  #> $irq #> [1] \"IRQ\" #>  #> $isl #> [1] \"ISL\" #>  #> $isr #> [1] \"ISR\" #>  #> $ita #> [1] \"ITA\" #>  #> $jam #> [1] \"JAM\" #>  #> $jor #> [1] \"JOR\" #>  #> $jpn #> [1] \"JPN\" #>  #> $kaz #> [1] \"KAZ\" #>  #> $ken #> [1] \"KEN\" #>  #> $kgz #> [1] \"KGZ\" #>  #> $khm #> [1] \"KHM\" #>  #> $kor #> [1] \"KOR\" #>  #> $kwt #> [1] \"KWT\" #>  #> $lao #> [1] \"LAO\" #>  #> $lbn #> [1] \"LBN\" #>  #> $lby #> [1] \"LBY\" #>  #> $lka #> [1] \"LKA\" #>  #> $ltu #> [1] \"LTU\" #>  #> $lux #> [1] \"LUX\" #>  #> $lva #> [1] \"LVA\" #>  #> $mar #> [1] \"MAR\" #>  #> $mda #> [1] \"MDA\" #>  #> $mdg #> [1] \"MDG\" #>  #> $mex #> [1] \"MEX\" #>  #> $mkd #> [1] \"MKD\" #>  #> $mlt #> [1] \"MLT\" #>  #> $mmr #> [1] \"MMR\" #>  #> $mne #> [1] \"MNE\" #>  #> $mng #> [1] \"MNG\" #>  #> $moz #> [1] \"MOZ\" #>  #> $mus #> [1] \"MUS\" #>  #> $mys #> [1] \"MYS\" #>  #> $nam #> [1] \"NAM\" #>  #> $ner #> [1] \"NER\" #>  #> $nga #> [1] \"NGA\" #>  #> $nic #> [1] \"NIC\" #>  #> $nld #> [1] \"NLD\" #>  #> $nor #> [1] \"NOR\" #>  #> $npl #> [1] \"NPL\" #>  #> $nzl #> [1] \"NZL\" #>  #> $oafr #> [1] \"OAFR\" #>  #> $oasi #> [1] \"OASI\" #>  #> $oamr #> [1] \"OAMR\" #>  #> $omn #> [1] \"OMN\" #>  #> $pak #> [1] \"PAK\" #>  #> $pan #> [1] \"PAN\" #>  #> $per #> [1] \"PER\" #>  #> $phl #> [1] \"PHL\" #>  #> $pol #> [1] \"POL\" #>  #> $prk #> [1] \"PRK\" #>  #> $prt #> [1] \"PRT\" #>  #> $pry #> [1] \"PRY\" #>  #> $qat #> [1] \"QAT\" #>  #> $rou #> [1] \"ROU\" #>  #> $rus #> [1] \"RUS\" #>  #> $rwa #> [1] \"RWA\" #>  #> $sau #> [1] \"SAU\" #>  #> $sdn #> [1] \"SDN\" #>  #> $sen #> [1] \"SEN\" #>  #> $sgp #> [1] \"SGP\" #>  #> $slv #> [1] \"SLV\" #>  #> $srb #> [1] \"SRB\" #>  #> $ssd #> [1] \"SSD\" #>  #> $sun #> [1] \"SUN\" #>  #> $sur #> [1] \"SUR\" #>  #> $svk #> [1] \"SVK\" #>  #> $svn #> [1] \"SVN\" #>  #> $swe #> [1] \"SWE\" #>  #> $swz #> [1] \"SWZ\" #>  #> $syr #> [1] \"SYR\" #>  #> $tgo #> [1] \"TGO\" #>  #> $tha #> [1] \"THA\" #>  #> $tjk #> [1] \"TJK\" #>  #> $tkm #> [1] \"TKM\" #>  #> $tto #> [1] \"TTO\" #>  #> $tun #> [1] \"TUN\" #>  #> $tur #> [1] \"TUR\" #>  #> $twn #> [1] \"TWN\" #>  #> $tza #> [1] \"TZA\" #>  #> $uga #> [1] \"UGA\" #>  #> $ukr #> [1] \"UKR\" #>  #> $ury #> [1] \"URY\" #>  #> $usa #> [1] \"USA\" #>  #> $uzb #> [1] \"UZB\" #>  #> $ven #> [1] \"VEN\" #>  #> $vnm #> [1] \"VNM\" #>  #> $wabk #> [1] \"WABK\" #>  #> $wmbk #> [1] \"WMBK\" #>  #> $xkx #> [1] \"XKX\" #>  #> $yem #> [1] \"YEM\" #>  #> $yug #> [1] \"YUG\" #>  #> $zaf #> [1] \"ZAF\" #>  #> $zmb #> [1] \"ZMB\" #>  #> $zwe #> [1] \"ZWE\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/clean_up_beatles.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean up Beatles tables — clean_up_beatles","title":"Clean up Beatles tables — clean_up_beatles","text":"Used testing.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/clean_up_beatles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean up Beatles tables — clean_up_beatles","text":"","code":"clean_up_beatles(conn)"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/clean_up_beatles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean up Beatles tables — clean_up_beatles","text":"conn connection Postgres database. user must write permission.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/clean_up_beatles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean up Beatles tables — clean_up_beatles","text":"list tables deleted","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/compress_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute the compress function on a database table — compress_rows","title":"Execute the compress function on a database table — compress_rows","text":"execution pipeline, compress rows table identical data exist multiple versions. compress function performs task database. R function wrapper executes compress database.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/compress_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute the compress function on a database table — compress_rows","text":"","code":"compress_rows(   db_table_name,   valid_from_version_colname = PFUPipelineTools::dataset_info$valid_from_version_colname,   valid_to_version_colname = PFUPipelineTools::dataset_info$valid_to_version_colname,   conn )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/compress_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute the compress function on a database table — compress_rows","text":"db_table_name name table compressed. valid_from_version_colname, valid_to_version_colname Column names db_table_name. Defaults PFUPipelineTools::dataset_info$valid_from_version_colname PFUPipelineTools::dataset_info$valid_to_version_colname. conn connection database tables compressed.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/compress_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute the compress function on a database table — compress_rows","text":"number rows affected call compress db_table_name, always 0.","code":""},{"path":[]},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data pronoun — .data","title":"Data pronoun — .data","text":"See rlang::.data details.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data pronoun — .data","text":"","code":".data"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/dataset_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Column name for datasets — dataset_info","title":"Column name for datasets — dataset_info","text":"string list containing column name datasets.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/dataset_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column name for datasets — dataset_info","text":"","code":"dataset_info"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/dataset_info.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Column name for datasets — dataset_info","text":"string list 14 entries. dataset_colname string name dataset column, \"Dataset\". valid_from_version_colname string name column gives initial version datapoint valid, \"ValidFromVersion\". valid_to_version_colname string name column gives last version datapoint valid, \"ValidToVersion\". iea string identifying ECC data IEA exclusively. mw string identifying ECC data muscle work (MW) exclusively. string identifying ECC data include IEA muscle work.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/dataset_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Column name for datasets — dataset_info","text":"","code":"dataset_info #> $dataset_colname #> [1] \"Dataset\" #>  #> $valid_from_version_colname #> [1] \"ValidFromVersion\" #>  #> $valid_to_version_colname #> [1] \"ValidToVersion\" #>  #> $clpfu_iea #> [1] \"CL-PFU IEA\" #>  #> $clpfu_mw #> [1] \"CL-PFU MW\" #>  #> $clpfu_iea_mw #> [1] \"CL-PFU IEA+MW\" #>  #> $clpfu #> [1] \"CL-PFU\" #>  #> $ieaeweb #> [1] \"IEA EWEB\" #>  #> $faostat #> [1] \"FAOSTAT\" #>  #> $ilostat #> [1] \"ILOSTAT\" #>  #> $wlrpfu #> [1] \"WLR-PFU\" #>  #> $wlrpfu_elect #> [1] \"WLR-PFU Electricity\" #>  #> $wlrpfu_trans #> [1] \"WLR-PFU Transport\" #>  #> $wlrpfu_mw #> [1] \"WLR-PFU Muscle work\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/decode_fk_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Decode a vector of foreign keys according to foreign key parent table — decode_fk_keys","title":"Decode a vector of foreign keys according to foreign key parent table — decode_fk_keys","text":"database, foreign key tables containing fk values (usually strings) fk keys (usually integers). function converts vector fk keys (integers, v_key) vector fk values (strings) according database conn.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/decode_fk_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decode a vector of foreign keys according to foreign key parent table — decode_fk_keys","text":"","code":"decode_fk_keys(   v_key,   fk_table_name,   conn,   schema = schema_from_conn(conn),   fk_parent_tables = get_all_fk_tables(conn = conn, schema = schema, collect = TRUE),   pk_suffix = PFUPipelineTools::key_col_info$pk_suffix )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/decode_fk_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decode a vector of foreign keys according to foreign key parent table — decode_fk_keys","text":"v_key vector fk keys (typically integers) converted fk values (typically strings). fk_table_name name foreign key table conn contains mapping fk values fk keys. conn connection CL-PFU database. Needed fk_parent_tables provided. schema data model (dm object) database conn. Default dm_from_con(conn, learn_keys = TRUE). Needed fk_parent_tables provided. See details. fk_parent_tables named list parent tables foreign keys db_table_name. See details. pk_suffix string gives suffix primary key columns. Default PFUPipelineTools::key_col_info$pk_suffix.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/decode_fk_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decode a vector of foreign keys according to foreign key parent table — decode_fk_keys","text":"v_key decoded according fk_parent_tables.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/decode_fk_keys.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Decode a vector of foreign keys according to foreign key parent table — decode_fk_keys","text":"schema data model (dm object) database conn. default value (schema_from_conn(conn)) extracts data model database conn automatically. However, caller already data model, supplying schema argument save time. fk_parent_tables named list tables, one (one named fk_table_name) contains foreign keys v. fk_parent_tables treated store foreign key tables retrieved name needed. default value (calls get_all_fk_tables() collect = TRUE) retrieves possible foreign key parent tables conn, potentially time-consuming process. speed, pre-compute foreign key parent tables (via get_all_fk_tables(collect = TRUE)) pass list fk_parent_tables argument function.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/decode_fk_keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decode a vector of foreign keys according to foreign key parent table — decode_fk_keys","text":"","code":"fk_parent_tables <- list(   Country = tibble::tribble(~CountryID, ~Country,                             1, \"USA\",                             2, \"ZAF\",                             3, \"GHA\")) decode_fk_keys(c(1, 1, 3),                fk_table_name = \"Country\",                fk_parent_tables = fk_parent_tables) #> [1] \"USA\" \"USA\" \"GHA\""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/decode_fks.html","id":null,"dir":"Reference","previous_headings":"","what":"Decode keys in a database table — decode_fks","title":"Decode keys in a database table — decode_fks","text":"querying table database, helpful decode primary foreign keys data frame, .e. translate keys values. function provides service.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/decode_fks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decode keys in a database table — decode_fks","text":"","code":"decode_fks(   .df = NULL,   db_table_name,   collect = FALSE,   conn = NULL,   schema = schema_from_conn(conn),   fk_parent_tables = get_all_fk_tables(conn = conn, schema = schema),   .child_table = PFUPipelineTools::dm_fk_colnames$child_table,   .child_fk_cols = PFUPipelineTools::dm_fk_colnames$child_fk_cols,   .parent_key_cols = PFUPipelineTools::dm_fk_colnames$parent_key_cols,   .pk_suffix = PFUPipelineTools::key_col_info$pk_suffix,   .y_joining_suffix = \".y\" )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/decode_fks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decode keys in a database table — decode_fks","text":".df data frame whose foreign keys decoded. Default NULL, meaning .df downloaded db_table_name conn decoding foreign keys. db_table_name string name database table .df uploaded. collect boolean tells whether download decoded table (returning -memory data frame produced calling dplyr::collect()) tbl (reference database query executed dplyr::collect()). Default FALSE. Applies .df NULL. Note prevent downloads conn, supply values schema fk_parent_tables, whose default values download dm object foreign key parent tables database conn. conn optional database connection. Necessary default values .df, schema, fk_parent_tables. Also necessary collect = TRUE. Default NULL. schema data model (dm object) database conn. See details. fk_parent_tables named list parent tables foreign keys db_table_name. See details. .child_table, .child_fk_cols, .parent_key_cols See PFUPipelineTools::dm_fk_colnames. .pk_suffix See PFUPipelineTools::key_col_info. .y_joining_suffix y column name suffix left_join(). Default \".y\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/decode_fks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decode keys in a database table — decode_fks","text":"version .df integer keys replaced key values.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/decode_fks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Decode keys in a database table — decode_fks","text":"schema data model (dm object) CL-PFU database. can obtained calling schema_from_conn(). default schema_from_conn(conn = conn), downloads dm object conn. save time, pre-compute dm object supply schema argument. fk_parent_tables named list tables, foreign key (fk) parent tables db_table_name containing mapping fk values (usually strings) fk keys (usually integers). fk_parent_tables treated store foreign key tables retrieved name needed. appropriate value fk_parent_tables can obtained get_all_fk_tables(). two three ways use function. Offline: supply value .df values schema fk_parent_tables. offline mode, conn needed connection database conn made. Download: accept default value .df (NULL) supply conn. download mode, db_table_name downloaded database conn. Fast download: supply values conn, schema fk_parent_tables. schema fk_parent_tables() can obtained calling schema_from_conn(conn = conn) get_all_fk_tables(conn = conn, schema = schema), respectively. fast download mode, execution time reduced, database conn already queried schema fk_parent_tables. Fast download mode quickens multiple downloads database.","code":""},{"path":[]},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/dm_fk_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Column names in foreign key tables from dm — dm_fk_colnames","title":"Column names in foreign key tables from dm — dm_fk_colnames","text":"dm_get_all_fks() package dm returns data frame several columns. constant gives names string list document meaning guard future changes.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/dm_fk_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column names in foreign key tables from dm — dm_fk_colnames","text":"","code":"dm_fk_colnames"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/dm_fk_colnames.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Column names in foreign key tables from dm — dm_fk_colnames","text":"string list 5 entries. child_table name string column tells child table names. child_fk_cols name string column identifies foreign key columns child table. parent_table name string column identifies table child's foreign key defined. parent_key_cols name string column tells column parent table contains definition foreign key. on_delete Tells happen foreign key column deleted.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/dm_fk_colnames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Column names in foreign key tables from dm — dm_fk_colnames","text":"context, \"parent\" table contains foreign key definition values. \"child\" table contains least one foreign column references column parent table.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/dm_fk_colnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Column names in foreign key tables from dm — dm_fk_colnames","text":"","code":"dm_fk_colnames #> $child_table #> [1] \"child_table\" #>  #> $child_fk_cols #> [1] \"child_fk_cols\" #>  #> $parent_table #> [1] \"parent_table\" #>  #> $parent_key_cols #> [1] \"parent_key_cols\" #>  #> $on_delete #> [1] \"on_delete\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/dm_pk_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Column names in primary key tables from dm — dm_pk_colnames","title":"Column names in primary key tables from dm — dm_pk_colnames","text":"dm_get_all_pks() package dm returns data frame several columns. constant gives names string list document meaning guard future changes.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/dm_pk_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column names in primary key tables from dm — dm_pk_colnames","text":"","code":"dm_pk_colnames"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/dm_pk_colnames.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Column names in primary key tables from dm — dm_pk_colnames","text":"string list 3 entries. table name string column tells table names. pk_col name string column identifies primary key columns table. autoincrement name boolean column tells whether pk_col auto-incrementing.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/dm_pk_colnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Column names in primary key tables from dm — dm_pk_colnames","text":"","code":"dm_pk_colnames #> $table #> [1] \"table\" #>  #> $pk_col #> [1] \"pk_col\" #>  #> $autoincrement #> [1] \"autoincrement\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/double_counted_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"Double-counted countries — double_counted_countries","title":"Double-counted countries — double_counted_countries","text":"string list containing abbreviated names double-counted countries.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/double_counted_countries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Double-counted countries — double_counted_countries","text":"","code":"double_counted_countries"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/double_counted_countries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Double-counted countries — double_counted_countries","text":"string list 9 entries.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/double_counted_countries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Double-counted countries — double_counted_countries","text":"","code":"double_counted_countries #> $afri #> [1] \"AFRI\" #>  #> $asia #> [1] \"ASIA\" #>  #> $bunk #> [1] \"BUNK\" #>  #> $eurp #> [1] \"EURP\" #>  #> $mide #> [1] \"MIDE\" #>  #> $namr #> [1] \"NAMR\" #>  #> $ocen #> [1] \"OCEN\" #>  #> $samr #> [1] \"SAMR\" #>  #> $wrld #> [1] \"WRLD\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_decode_matsindf.html","id":null,"dir":"Reference","previous_headings":"","what":"Encode and decode matsindf data frames for storage in a database — encode_decode_matsindf","title":"Encode and decode matsindf data frames for storage in a database — encode_decode_matsindf","text":"CL-PFU database enables storage matsindf data frames encoding matrix values triplet format. functions perform encoding decoding matsindf data frames. encode_matsindf() decode_matsindf() inverses .","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_decode_matsindf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encode and decode matsindf data frames for storage in a database — encode_decode_matsindf","text":"","code":"decode_matsindf(   .encoded,   index_map,   rctypes,   wide_by_matrices = TRUE,   matrix_class = c(\"matrix\", \"Matrix\"),   matname = PFUPipelineTools::mat_meta_cols$matname,   matval = PFUPipelineTools::mat_meta_cols$matval,   row_index_colname = PFUPipelineTools::mat_colnames$i,   col_index_colname = PFUPipelineTools::mat_colnames$j,   value_colname = PFUPipelineTools::mat_colnames$value,   rowtype_colname = PFUPipelineTools::mat_meta_cols$rowtype,   coltype_colname = PFUPipelineTools::mat_meta_cols$coltype )  encode_matsindf(   .matsindf,   index_map = magrittr::set_names(list(industry_index_map, product_index_map),     c(IEATools::row_col_types$industry, IEATools::row_col_types$product)),   industry_index_map,   product_index_map,   retain_zero_structure = FALSE,   matname = PFUPipelineTools::mat_meta_cols$matname,   matval = PFUPipelineTools::mat_meta_cols$matval,   row_index_colname = PFUPipelineTools::mat_colnames$i,   col_index_colname = PFUPipelineTools::mat_colnames$j,   value_colname = PFUPipelineTools::mat_colnames$value )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_decode_matsindf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encode and decode matsindf data frames for storage in a database — encode_decode_matsindf","text":".encoded data frame matrices triplet form whose matrices decoded. index_map list two index map data frames. Default list(Industry = industry_index_map, Product = product_index_map). rctypes data frame row column types. wide_by_matrices boolean tells whether tidyr::pivot_wider() results. Default TRUE. matrix_class class matrices created decode_matsindf(). One \"matrix\" (default R's native matrix class) \"Matrix\" (sparse matrices). matname name column .matsindf contains matrix names. Default \"matname\". matval name column .matsindf contains matrix values. Default \"matval\". row_index_colname name row index column .encoded. Default \"\". col_index_colname name column index column .encoded. Default \"j\". value_colname name value column. Default \"value\". rowtype_colname, coltype_colname Names rowtype coltype columns. .matsindf matsindf data frame whose matrices encoded. industry_index_map, product_index_map Optional data frames two columns providing mapping row column indices row column names. See details. retain_zero_structure boolean tells whether retain structure zero matrices creating triplets. Default FALSE. See details.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_decode_matsindf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encode and decode matsindf data frames for storage in a database — encode_decode_matsindf","text":"encode_matsindf(), version .matsindf matrices triplet form, appropriate insertion database. decode_matsindf(), version .encoded appropriate -memory analysis calculations.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_decode_matsindf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Encode and decode matsindf data frames for storage in a database — encode_decode_matsindf","text":"index_map must unnamed list two data frames named list two data frames. unnamed list exactly two data frames, data frame must integer column character column. first data frame index_map interpreted mapping row names row indices second data frame index_map interpreted mapping column names column indices. named list two data frames, names index_map interpreted row column types, named data frames applied mapping associated row column type. example data frame named \"Industry\" applied dimension (row column) \"Industry\" type. row column \"Industry\" type, \"Industry\" mapping applied . sending named data frames index_map, matrices encoded must row type column type. appropriate mapping found index_map, error raised. matching data frames must integer column character column. .matsindf can () wide matrices, matrix names column names (b) tidy, matname matval columns. .matsindf contain matrix columns, .matsindf returned unchanged. .encoded contain matname column, .encoded returned unchanged. default, encode_matsindf() return zero-row data frames encoding zero matrices. Set retain_zero_structure = TRUE return entries zero matrices. matname, row_index_colname, col_index_colname, val_colname must present .encoded. , .encoded returned unmodified.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_fk_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Encode a vector of foreign key values according to a foreign key parent table — encode_fk_values","title":"Encode a vector of foreign key values according to a foreign key parent table — encode_fk_values","text":"database, foreign key tables containing fk values (usually strings) fk keys (usually integers). function converts vector fk values (strings, v_val) vector fk keys (integers) according database conn.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_fk_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encode a vector of foreign key values according to a foreign key parent table — encode_fk_values","text":"","code":"encode_fk_values(   v_val,   fk_table_name,   conn = NULL,   schema = schema_from_conn(conn),   fk_parent_tables = get_all_fk_tables(conn = conn, schema = schema, collect = TRUE),   pk_suffix = PFUPipelineTools::key_col_info$pk_suffix )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_fk_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encode a vector of foreign key values according to a foreign key parent table — encode_fk_values","text":"v_val vector fk values (typically strings) converted fk keys (typically integers). fk_table_name name foreign key table conn contains mapping fk values fk keys. conn connection CL-PFU database. Needed fk_parent_tables provided. Default NULL. schema data model (dm object) database conn. Default dm_from_con(conn, learn_keys = TRUE). Needed fk_parent_tables provided. See details. fk_parent_tables named list parent tables foreign keys db_table_name. See details. pk_suffix string gives suffix primary key columns. Default PFUPipelineTools::key_col_info$pk_suffix.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_fk_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encode a vector of foreign key values according to a foreign key parent table — encode_fk_values","text":"v_val encoded according fk_parent_tables.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_fk_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Encode a vector of foreign key values according to a foreign key parent table — encode_fk_values","text":"schema data model (dm object) database conn. default value (schema_from_conn(conn)) extracts data model database conn automatically. However, caller already data model, supplying schema argument save time. fk_parent_tables named list tables, one (one named fk_table_name) contains foreign keys v. fk_parent_tables treated store foreign key tables retrieved name needed. default value (calls get_all_fk_tables() collect = TRUE) retrieves possible foreign key parent tables conn, potentially time-consuming process. speed, pre-compute foreign key parent tables (via get_all_fk_tables(collect = TRUE)) pass list fk_parent_tables argument function.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_fk_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Encode a vector of foreign key values according to a foreign key parent table — encode_fk_values","text":"","code":"fk_parent_tables <- list(   Country = tibble::tribble(~CountryID, ~Country,                             1, \"USA\",                             2, \"ZAF\",                             3, \"GHA\")) encode_fk_values(c(\"USA\", \"USA\", \"GHA\"),                  fk_table_name = \"Country\",                  fk_parent_tables = fk_parent_tables) #> [1] 1 1 3"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_fks.html","id":null,"dir":"Reference","previous_headings":"","what":"Encode foreign keys in a data frame to be uploaded — encode_fks","title":"Encode foreign keys in a data frame to be uploaded — encode_fks","text":"CL-PFU pipeline, allow data frames uploaded database foreign key values (usually strings) instead foreign keys (integers) foreign key columns. function translates fk values fk keys.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_fks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encode foreign keys in a data frame to be uploaded — encode_fks","text":"","code":"encode_fks(   .df,   db_table_name,   conn = NULL,   schema = schema_from_conn(conn),   fk_parent_tables = get_all_fk_tables(conn = conn, schema = schema),   .child_table = PFUPipelineTools::dm_fk_colnames$child_table,   .child_fk_cols = PFUPipelineTools::dm_fk_colnames$child_fk_cols,   .parent_table = PFUPipelineTools::dm_fk_colnames$parent_table,   .parent_key_cols = PFUPipelineTools::dm_fk_colnames$parent_key_cols,   .pk_suffix = PFUPipelineTools::key_col_info$pk_suffix )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_fks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encode foreign keys in a data frame to be uploaded — encode_fks","text":".df data frame uploaded. db_table_name string name database table .df uploaded. conn optional database connection. Necessary default values schema fk_parent_tables. Default NULL. schema data model (dm object) database conn. See details. fk_parent_tables named list parent tables foreign keys db_table_name. See details. .child_table, .child_fk_cols, .parent_table, .parent_key_cols See PFUPipelineTools::dm_fk_colnames. .pk_suffix See PFUPipelineTools::key_col_info.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_fks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encode foreign keys in a data frame to be uploaded — encode_fks","text":"version .df fk values (often strings) replaced fk keys (integers).","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_fks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Encode foreign keys in a data frame to be uploaded — encode_fks","text":"schema data model (dm object) CL-PFU database. can obtained calling schema_from_conn(). fk_parent_tables named list tables, fk parent tables containing mapping fk values (usually strings) fk keys (usually integers) db_table_name. fk_parent_tables treated store foreign key tables retrieved name needed. appropriate value fk_parent_tables can obtained get_all_fk_tables(). .df contains foreign key columns, .df returned unmodified.","code":""},{"path":[]},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_version_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Encode a version string — encode_version_string","title":"Encode a version string — encode_version_string","text":"function encodes version string, returning integer representation version string.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_version_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encode a version string — encode_version_string","text":"","code":"encode_version_string(   version_string,   table_name,   conn = NULL,   schema = schema_from_conn(conn = conn),   fk_parent_tables = get_all_fk_tables(conn = conn, schema = schema),   .version_colname = PFUPipelineTools::dataset_info$valid_from_version_colname )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_version_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encode a version string — encode_version_string","text":"version_string version encoded. table_name name table version_string found. conn optional database connection. Necessary default values schema fk_parent_tables. Default NULL. schema schema database. Default schema_from_conn(conn = conn). fk_parent_tables foreign key parent tables. Default get_all_fk_tables(conn = conn, schema = schema). .version_colname column versions provided. column used internally. Default PFUPipelineTools::dataset_info$valid_from_version_colname. PFUPipelineTools::dataset_info$valid_to_version_colname also work.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/encode_version_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encode a version string — encode_version_string","text":"integer index version_string.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/exemplar_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Exemplar table names — exemplar_names","title":"Exemplar table names — exemplar_names","text":"string list containing named names columns tabs exemplar tables. Items list provide default values column name function arguments throughout PFUPipeline package.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/exemplar_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exemplar table names — exemplar_names","text":"","code":"exemplar_names"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/exemplar_names.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Exemplar table names — exemplar_names","text":"string list 16 entries. exemplar_tab_name string name tab Excel file containing exemplar table. prev_names name column previous names used country. exemplars name column exemplar countries. exemplar_country name exemplar country column. exemplar_countries name exemplar countries column. exemplar_tables name column containing exemplar tables. iea_data name column containing IEA extended energy balance data. alloc_data name column containing final--useful allocation data. incomplete_alloc_table name column containing incomplete final--useful allocation tables. complete_alloc_table name column containing completed final--useful allocation tables. incomplete_eta_table name column containing incomplete final--useful efficiency tables. complete_eta_table name column containing completed final--useful efficiency tables. region_code name region code column. country_name name column containing long name country. agg_code_col metadata column \"Agg.Code\", representing country, country group code individual country level data aggregated . world name world region.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/exemplar_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exemplar table names — exemplar_names","text":"","code":"exemplar_names #> $exemplar_tab_name #> [1] \"exemplar_table\" #>  #> $prev_names #> [1] \"PrevNames\" #>  #> $exemplars #> [1] \"Exemplars\" #>  #> $exemplar_country #> [1] \"ExemplarCountry\" #>  #> $exemplar_countries #> [1] \"ExemplarCountries\" #>  #> $exemplar_tables #> [1] \"ExemplarTables\" #>  #> $iea_data #> [1] \"IEAData\" #>  #> $alloc_data #> [1] \"AllocData\" #>  #> $incomplete_alloc_table #> [1] \"IncompleteAllocTable\" #>  #> $complete_alloc_table #> [1] \"CompleteAllocTable\" #>  #> $incomplete_eta_table #> [1] \"IncompleteEtaTable\" #>  #> $complete_eta_table #> [1] \"CompleteEtaTable\" #>  #> $region_code #> [1] \"RegionCode\" #>  #> $country_name #> [1] \"CountryName\" #>  #> $agg_code_col #> [1] \"AggCode\" #>  #> $world #> [1] \"WRLD\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/filter_countries_years.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract specific country and year data — filter_countries_years","title":"Extract specific country and year data — filter_countries_years","text":"Data extracted according countries years objects way amenable drake subtargets. dplyr: :filter() subsetting.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/filter_countries_years.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract specific country and year data — filter_countries_years","text":"","code":"filter_countries_years(   .df,   countries,   years,   country = IEATools::iea_cols$country,   year = IEATools::iea_cols$year )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/filter_countries_years.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract specific country and year data — filter_countries_years","text":".df data frame containing cleaned data lots countries years. countries list country codes countries analyzed. \"\" means return countries. years vector years. \"\" means return years. country, year See IEATools::iea_cols.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/filter_countries_years.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract specific country and year data — filter_countries_years","text":"data frame desired IEA data .","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/filter_countries_years.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract specific country and year data — filter_countries_years","text":"","code":"IEATools::sample_iea_data_path() |>   IEATools::load_tidy_iea_df() |>   filter_countries_years(countries = c(\"ZAF\"), years = 1960:1999) #> # A tibble: 98 × 11 #>    Country Method EnergyType LastStage  Year LedgerSide FlowAggregationPoint     #>    <chr>   <chr>  <chr>      <chr>     <dbl> <chr>      <chr>                    #>  1 ZAF     PCM    E          Final      1971 Supply     Total primary energy su… #>  2 ZAF     PCM    E          Final      1971 Supply     Total primary energy su… #>  3 ZAF     PCM    E          Final      1971 Supply     Total primary energy su… #>  4 ZAF     PCM    E          Final      1971 Supply     Total primary energy su… #>  5 ZAF     PCM    E          Final      1971 Supply     Total primary energy su… #>  6 ZAF     PCM    E          Final      1971 Supply     Total primary energy su… #>  7 ZAF     PCM    E          Final      1971 Supply     Total primary energy su… #>  8 ZAF     PCM    E          Final      1971 Supply     Total primary energy su… #>  9 ZAF     PCM    E          Final      1971 Supply     Total primary energy su… #> 10 ZAF     PCM    E          Final      1971 Supply     Total primary energy su… #> # ℹ 88 more rows #> # ℹ 4 more variables: Flow <chr>, Product <chr>, Unit <chr>, Edot <dbl>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/filter_on_version_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a database table based on a version string. — filter_on_version_string","title":"Filter a database table based on a version string. — filter_on_version_string","text":"Filtering database table based version wish download common task. CL-PFU database, store data compressed format identical data points duplicated. Rather, stored single row ValidFromVersion ValidToVersion columns incremented appropriately.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/filter_on_version_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a database table based on a version string. — filter_on_version_string","text":"","code":"filter_on_version_string(   tbl,   version_string,   db_table_name,   collect = FALSE,   conn = NULL,   schema = schema_from_conn(conn = conn),   fk_parent_tables = get_all_fk_tables(conn = conn, schema = schema),   valid_from_version_colname = PFUPipelineTools::dataset_info$valid_from_version_colname,   valid_to_version_colname = PFUPipelineTools::dataset_info$valid_to_version_colname )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/filter_on_version_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a database table based on a version string. — filter_on_version_string","text":"tbl tbl object filtered. version_string vector version strings indicate desired version(s). db_table_name name table filtered. collect boolean tells whether collect tbl conn returning. Default FALSE. conn optional database connection. Necessary default values schema fk_parent_tables. Default NULL. schema database schema (dm object). Default calls schema_from_conn(), can supply pre-computed schema speed. Needed decode_fks = TRUE (default). foreign keys decoded, setting NULL may improve speed. fk_parent_tables Foreign key parent tables assist decoding foreign keys. Default calls get_all_fk_tables(). valid_from_version_colname name ValidFromVersion column. Default PFUPipelineTools::dataset_info$valid_from_version_colname. valid_to_version_colname name ValidToVersion column. Default PFUPipelineTools::dataset_info$valid_to_version_colname.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/filter_on_version_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a database table based on a version string. — filter_on_version_string","text":"filtered version tbl.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/filter_on_version_string.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter a database table based on a version string. — filter_on_version_string","text":"desired version supplied version_string argument, can vector length. tbl db_table_name provided, db_table_name ignored.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/get_all_fk_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a named list of foreign key tables — get_all_fk_tables","title":"Get a named list of foreign key tables — get_all_fk_tables","text":"database whose tables many foreign keys point primary key tables, helpful list foreign key tables inboard outboard processing purposes, especially converting strings integer keys. function extracts named list data frames, data frame foreign key table database. data frame items list named names tables database conn.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/get_all_fk_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a named list of foreign key tables — get_all_fk_tables","text":"","code":"get_all_fk_tables(conn, schema = schema_from_conn(conn), collect = FALSE)"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/get_all_fk_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a named list of foreign key tables — get_all_fk_tables","text":"conn connection database. schema data model (dm object) database conn. Default calls schema_from_conn(conn). See details. collect boolean tells whether download foreign key tables. Default FALSE enable inboard processing queries.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/get_all_fk_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a named list of foreign key tables — get_all_fk_tables","text":"named list data frames, data frame table conn contains foreign keys values.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/get_all_fk_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a named list of foreign key tables — get_all_fk_tables","text":"default, returned list contains tbl objects, references actual tables conn. return actual data frames, set collect TRUE. schema data model (dm object) database conn. default value (calls schema_fom_conn()) extracts data model database conn automatically. However, caller already data model, supplying schema argument save time.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/hashed_table_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Column names in hashed tables — hashed_table_colnames","title":"Column names in hashed tables — hashed_table_colnames","text":"hashed table includes column contains string identifying database table data stored. object stores name column.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/hashed_table_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column names in hashed tables — hashed_table_colnames","text":"","code":"hashed_table_colnames"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/hashed_table_colnames.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Column names in hashed tables — hashed_table_colnames","text":"named list 4 entries hashed table column names.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/hashed_table_colnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Column names in hashed tables — hashed_table_colnames","text":"","code":"hashed_table_colnames #> $db_table_name #> [1] \"DBTableName\" #>  #> $nested_colname #> [1] \"NestedData\" #>  #> $nested_hash_colname #> [1] \"NestedDataHash\" #>  #> $tar_group_colname #> [1] \"tar_group\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/inboard_filter_copy.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy a country, year subset from one table to another — inboard_filter_copy","title":"Copy a country, year subset from one table to another — inboard_filter_copy","text":"Inboard copying tables much faster round-tripping data database local machine back. function inboard filter copy source dest conn, optionally emptying dest first.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/inboard_filter_copy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy a country, year subset from one table to another — inboard_filter_copy","text":"","code":"inboard_filter_copy(   source,   dest,   countries = NULL,   years = NULL,   empty_dest = TRUE,   in_place = FALSE,   dependencies = NULL,   additional_hash_group_cols = NULL,   usual_hash_group_cols = PFUPipelineTools::usual_hash_group_cols,   conn,   schema = schema_from_conn(conn),   fk_parent_tables = get_all_fk_tables(conn = conn, schema = schema),   country = IEATools::iea_cols$country,   year = IEATools::iea_cols$year,   pk_suffix = PFUPipelineTools::key_col_info$pk_suffix )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/inboard_filter_copy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy a country, year subset from one table to another — inboard_filter_copy","text":"source string identifying source table. dest string identifying destination table. countries Countries keep. years Years keep. empty_dest boolean tells whether empty destination table copying. Default TRUE. in_place boolean tells whether make changes remote database conn. dependencies objects (often targets) upon inboard copy depends. default NULL. See details. additional_hash_group_cols vector strings gives names additional columns hashed. usual_hash_group_cols string vector gives typical names columns hashed. Default PFUPipelineTools::usual_hash_group_cols. conn database connection. schema data model (dm object) database conn. Default dm_from_con(conn, learn_keys = TRUE). See details. fk_parent_tables named list parent tables foreign keys db_table_name. See details. country name country column source dest. Default IEATools::iea_cols$country. year name year column source dest. Default IEATools::iea_cols$year. pk_suffix suffix primary key columns. Default PFUPipelineTools::key_col_info$pk_suffix.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/inboard_filter_copy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy a country, year subset from one table to another — inboard_filter_copy","text":"hash destination data frame created pl_upsert().","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/inboard_filter_copy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Copy a country, year subset from one table to another — inboard_filter_copy","text":"source dest tables identical columns. dependencies argument can vector objects upon desired inboard copy depends. Typically, target makes source given dependencies, unless target makes source completes, inboard filter copy fail. dependencies ignored internally. schema data model (dm object) database conn. default value (schema_from_conn(conn)) extracts data model database conn automatically. However, caller already data model, supplying schema argument save time. fk_parent_tables named list tables, one (one named db_table_name) contains foreign keys db_table_name. fk_parent_tables treated store foreign key tables retrieved name needed. default value (calls get_all_fk_tables() collect = TRUE decoding foreign keys done outboard database) retrieves possible foreign key parent tables conn, potentially time-consuming process. speed, pre-compute foreign key parent tables (via get_all_fk_tables(collect = TRUE)) pass list fk_parent_tables argument function.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/install_compress_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Install the compress function to a database — install_compress_function","title":"Install the compress function to a database — install_compress_function","text":"running pipeline, compress identical rows table using version columns. plpgsql function compress_func_string work us. function adds compress function database conn.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/install_compress_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install the compress function to a database — install_compress_function","text":"","code":"install_compress_function(   conn,   compress_func_string = readr::read_file(system.file(\"extdata\", \"compress.sql\", package     = \"PFUPipelineTools\")) )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/install_compress_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install the compress function to a database — install_compress_function","text":"conn connection database compress function added. compress_func_string compress function. Default readr::read_file(file.path(\"data-raw\", \"compress.sql\").","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/install_compress_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install the compress function to a database — install_compress_function","text":"number rows affected adding function database conn, always 0.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/install_compress_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install the compress function to a database — install_compress_function","text":"compress already installed database conn, user previously installed compress can update . remove compress, see remove_compress_function().","code":""},{"path":[]},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/key_col_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Metadata about table keys — key_col_info","title":"Metadata about table keys — key_col_info","text":"string list containing information key columns.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/key_col_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metadata about table keys — key_col_info","text":"","code":"key_col_info"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/key_col_info.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Metadata about table keys — key_col_info","text":"string list 1 entries. pk_suffix string suffix names key columns, \"ID\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/key_col_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metadata about table keys — key_col_info","text":"","code":"key_col_info #> $pk_suffix #> [1] \"ID\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/load_fk_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Load foreign key tables for the CL-PFU database from a spreadsheet — load_fk_tables","title":"Load foreign key tables for the CL-PFU database from a spreadsheet — load_fk_tables","text":"SchemaAndSimpleTables.xlsx file contains sheet represents schema CL-PFU database. sheet designed enable easy changes CL-PFU database schema successive versions database. tabs (besides readme_sheet) foreign key tables. function reads foreign key tables SchemaAndSimpleTables.xlsx file returns named list tables, data frame format.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/load_fk_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load foreign key tables for the CL-PFU database from a spreadsheet — load_fk_tables","text":"","code":"load_fk_tables(   version,   simple_tables_path = PFUSetup::get_abs_paths(version = version)[[\"schema_path\"]],   readme_sheet = \"README\",   schema_sheet = \"Schema\",   .table = PFUPipelineTools::schema_table_colnames$table,   .colname = PFUPipelineTools::schema_table_colnames$colname,   .coldatatype = PFUPipelineTools::schema_table_colnames$coldatatype )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/load_fk_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load foreign key tables for the CL-PFU database from a spreadsheet — load_fk_tables","text":"version database version input information. simple_tables_path path file containing simple tables. Default PFUSetup::get_abs_paths()[[\"schema_path\"]] readme_sheet name sheet file simple_tables_path contains readme information. Default \"README\". schema_sheet name sheet file simple_tables_path contains schema information.` Default \"Schema\". .table, .colname, .coldatatype See PFUPipelineTools::schema_table_colnames.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/load_fk_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load foreign key tables for the CL-PFU database from a spreadsheet — load_fk_tables","text":"named list data frames, containing foreign key table CL-PFU database.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/load_fk_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load foreign key tables for the CL-PFU database from a spreadsheet — load_fk_tables","text":"readme_sheet schema_sheet ignored. sheets file schema_path assumed foreign key tables meant uploaded database.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/load_schema_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a CL-PFU database schema file — load_schema_table","title":"Read a CL-PFU database schema file — load_schema_table","text":"SchemaAndSimpleTables.xlsx file contains sheet represents schema CL-PFU database. sheet designed enable easy changes CL-PFU database schema successive versions database. function reads schema table SchemaAndSimpleTables.xlsx file.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/load_schema_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a CL-PFU database schema file — load_schema_table","text":"","code":"load_schema_table(   version,   schema_path = PFUSetup::get_abs_paths(version = version)[[\"schema_path\"]],   schema_sheet = \"Schema\" )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/load_schema_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a CL-PFU database schema file — load_schema_table","text":"version database version input information. schema_path path schema file. Default PFUSetup::get_abs_paths()[[\"schema_path\"]] schema_sheet name sheet schema file schema_path contains information tables, columns, primary foreign keys. Default \"Schema\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/load_schema_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a CL-PFU database schema file — load_schema_table","text":"dm object containing schema information CL-PFU database.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/load_schema_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a CL-PFU database schema file — load_schema_table","text":"","code":"if (FALSE) { # \\dontrun{ load_schema_table(version = \"v2.0\") } # }"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/machine_constants.html","id":null,"dir":"Reference","previous_headings":"","what":"Information about the machine efficiency files — machine_constants","title":"Information about the machine efficiency files — machine_constants","text":"string list containing information machine efficiency files. Items list provide default values machine efficiency files, including Excel tab names, etc.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/machine_constants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Information about the machine efficiency files — machine_constants","text":"","code":"machine_constants"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/machine_constants.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Information about the machine efficiency files — machine_constants","text":"string list 1 entries. efficiency_tab_name default name efficiency tabs machine efficiency excel files.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/machine_constants.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Information about the machine efficiency files — machine_constants","text":"","code":"machine_constants #> $efficiency_tab_name #> [1] \"FIN_ETA\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/mat_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Unwrapped matrix column names — mat_colnames","title":"Unwrapped matrix column names — mat_colnames","text":"string list containing names columns unwrapped matrices. CL-PFU database stores matrices row, col, val format. names columns.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/mat_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unwrapped matrix column names — mat_colnames","text":"","code":"mat_colnames"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/mat_colnames.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Unwrapped matrix column names — mat_colnames","text":"string list 6 entries. name row column, namely \"\". row name row column, namely \"\". j name column column, namely \"j\". col name column column, namely \"j\". x name value column, namely \"value\". value name value column, namely \"value\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/mat_colnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unwrapped matrix column names — mat_colnames","text":"","code":"mat_colnames #> $i #> [1] \"i\" #>  #> $row #> [1] \"i\" #>  #> $j #> [1] \"j\" #>  #> $col #> [1] \"j\" #>  #> $x #> [1] \"value\" #>  #> $value #> [1] \"value\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/mat_meta_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"PSUT matrix formation meta information column names — mat_meta_cols","title":"PSUT matrix formation meta information column names — mat_meta_cols","text":"forming PSUT matrices, meta information provided columns. list provides typical names meta information columns throughout PFUPipelineTools package.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/mat_meta_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PSUT matrix formation meta information column names — mat_meta_cols","text":"","code":"mat_meta_cols"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/mat_meta_cols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PSUT matrix formation meta information column names — mat_meta_cols","text":"string list 6 entries. matname name column contains matrix names. matval name column tidy data frame contains matrices . rowname name column contains matrix row names. colname name column contains matrix column names. rowtype name column contains matrix row types. coltype name column contains matrix column types.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/mat_meta_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PSUT matrix formation meta information column names — mat_meta_cols","text":"","code":"mat_meta_cols #> $matname #> [1] \"matname\" #>  #> $matval #> [1] \"matval\" #>  #> $rowname #> [1] \"rowname\" #>  #> $colname #> [1] \"colname\" #>  #> $rowtype #> [1] \"rowtype\" #>  #> $coltype #> [1] \"coltype\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/phi_sources.html","id":null,"dir":"Reference","previous_headings":"","what":"Sources for phi values — phi_sources","title":"Sources for phi values — phi_sources","text":"string list containing named sources phi (exergy--energy ratio) values.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/phi_sources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sources for phi values — phi_sources","text":"","code":"phi_sources"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/phi_sources.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sources for phi values — phi_sources","text":"string list 3 entries. eta_fu_tables Tables final--useful efficiency values. temperature_data Country-average yearly temperature data. phi_constants Tables constant phi values.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/phi_sources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sources for phi values — phi_sources","text":"","code":"phi_sources #> $eta_fu_tables #> [1] \"etafuTables\" #>  #> $temperature_data #> [1] \"TemperatureData\" #>  #> $phi_constants #> [1] \"phiConstants\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_collect_from_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a data frame based on its pl_hash() — pl_collect_from_hash","title":"Download a data frame based on its pl_hash() — pl_collect_from_hash","text":"hashed_table 0 rows, NULL returned.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_collect_from_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a data frame based on its pl_hash() — pl_collect_from_hash","text":"","code":"pl_collect_from_hash(   hashed_table,   version_string = NULL,   decode_fks = TRUE,   retain_table_name_col = FALSE,   set_tar_group = TRUE,   decode_matsindf = TRUE,   matrix_class = c(\"Matrix\", \"matrix\"),   tar_group_colname = PFUPipelineTools::hashed_table_colnames$tar_group_colname,   matname_colname = PFUPipelineTools::mat_meta_cols$matname,   matval_colname = PFUPipelineTools::mat_meta_cols$matval,   valid_from_version_colname = PFUPipelineTools::dataset_info$valid_from_version_colname,   valid_to_version_colname = PFUPipelineTools::dataset_info$valid_to_version_colname,   conn,   schema = schema_from_conn(conn = conn),   fk_parent_tables = get_all_fk_tables(conn = conn, schema = schema),   index_map_name = \"Index\",   index_map = fk_parent_tables[[index_map_name]],   rctype_table_name = \"matnameRCType\",   rctypes = decode_fks(db_table_name = rctype_table_name, collect = TRUE, conn = conn,     schema = schema, fk_parent_tables = fk_parent_tables),   .table_name_col = PFUPipelineTools::hashed_table_colnames$db_table_name,   .nested_hash_col = PFUPipelineTools::hashed_table_colnames$nested_hash_colname )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_collect_from_hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a data frame based on its pl_hash() — pl_collect_from_hash","text":"hashed_table table created pl_hash(). version_string string length 1 indicating version downloaded. NULL, default, means download versions. decode_fks boolean tells whether decode foreign keys returning. Default TRUE. retain_table_name_col boolean tells whether retain table name column (.table_name_col). Default FALSE. set_tar_group boolean tells whether set tar_group_colname column output value input. can one unique value tar_group_colname, otherwise error raised. Default TRUE. decode_matsindf boolean tells whether decode matsindf data frame. Calls decode_matsindf() internally. Default TRUE. matrix_class One \"Matrix\" (default sparse matrices) (\"matrix\") native matrix form R. Default \"Matrix\". tar_group_colname name tar_group column. default PFUPipelineTools::hashed_table_colnames$tar_group_colname. matname_colname, matval_colname Names used matrix names matrix values. Defaults PFUPipelineTools::mat_meta_cols$matname PFUPipelineTools::mat_meta_cols$matval, respectively. valid_from_version_colname, valid_to_version_colname Names columns containing version information. Defaults PFUPipelineTools::dataset_info$valid_from_version PFUPipelineTools::dataset_info$valid_to_version, respectively. conn database connection. schema database schema (dm object). Default calls schema_from_conn(), can supply pre-computed schema speed. Needed decode_fks = TRUE (default). foreign keys decoded, setting NULL may improve speed. fk_parent_tables Foreign key parent tables assist decoding foreign keys (decode_fks = TRUE, default). Default calls get_all_fk_tables(). Needed decode_fks = TRUE (default). foreign keys decoded, setting NULL may improve speed. index_map_name name index map. Default \"Index\". index_map list data frames assist decoding matrices. Passed decode_matsindf() decode_matsindf TRUE otherwise needed. Default fk_parent_tables[[index_map_name]]. rctype_table_name name row column types. rctypes data frame row column types. Passed decode_matsindf() decode_matsindf TRUE otherwise needed. Default calls decode_fks(). .table_name_col, .nested_hash_col See PFUPipelineTools::hashed_table_colnames.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_collect_from_hash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a data frame based on its pl_hash() — pl_collect_from_hash","text":"downloaded data frame described hashed_table.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_destroy.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset the CL-PFU database pipeline to original condition — pl_destroy","title":"Reset the CL-PFU database pipeline to original condition — pl_destroy","text":"Sometimes, just need start scratch. function destroys local targets cache removes tables database conn. sure know !","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_destroy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset the CL-PFU database pipeline to original condition — pl_destroy","text":"","code":"pl_destroy(   conn,   store = targets::tar_config_get(\"store\"),   destroy_cache = FALSE,   drop_tables = FALSE )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_destroy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset the CL-PFU database pipeline to original condition — pl_destroy","text":"conn DBI connection database. store path targets store. Default targets::tar_config_get(\"store\"), normally _targets. destroy_cache boolean tells whether destroy local targets cache. Default FALSE. drop_tables TRUE, tables conn dropped. character vector, tells tables drop. Default FALSE, meaning tables dropped.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_destroy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset the CL-PFU database pipeline to original condition — pl_destroy","text":"names tables dropped () empty character vector tables dropped.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_destroy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reset the CL-PFU database pipeline to original condition — pl_destroy","text":"conn's user must superuser privileges. destructive function, caller must opt behaviors. drop_tables TRUE, destroy_cache implied TRUE, targets cache destroyed. present","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_filter_collect.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a table from the database using natural expressions — pl_filter_collect","title":"Filter a table from the database using natural expressions — pl_filter_collect","text":"Often collecting data database, filtering desired. filtering based foreign keys (fks, stored database) effectively impossible, foreign key encoding. function filters based fk values (typically strings), fk keys (typically integers), thereby simplifying filtering process, optional downloading thereafter. default (collect = FALSE), tbl returned (data downloaded database). Use dplyr::collect() execute resulting SQL query obtain -memory data frame. , set collect = TRUE execute SQL return -memory data frame.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_filter_collect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a table from the database using natural expressions — pl_filter_collect","text":"","code":"pl_filter_collect(   db_table_name,   ...,   version_string = NULL,   collect = FALSE,   create_matsindf = collect,   conn,   schema = schema_from_conn(conn = conn),   fk_parent_tables = get_all_fk_tables(conn = conn, schema = schema),   index_map_name = \"Index\",   index_map = fk_parent_tables[[index_map_name]],   rctype_table_name = \"matnameRCType\",   rctypes = decode_fks(db_table_name = rctype_table_name, collect = TRUE, conn = conn,     schema = schema, fk_parent_tables = fk_parent_tables),   matrix_class = c(\"Matrix\", \"matrix\"),   matname = PFUPipelineTools::mat_meta_cols$matname,   matval = PFUPipelineTools::mat_meta_cols$matval,   rowtype_colname = PFUPipelineTools::mat_meta_cols$rowtype,   coltype_colname = PFUPipelineTools::mat_meta_cols$coltype,   valid_from_version_colname = PFUPipelineTools::dataset_info$valid_from_version_colname,   valid_to_version_colname = PFUPipelineTools::dataset_info$valid_to_version_colname )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_filter_collect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a table from the database using natural expressions — pl_filter_collect","text":"db_table_name string name database table filtered. ... Filter conditions data frame, Country == \"USA\" Year %% 1960:2020. conditions reduce data volume, applied prior downloading conn. rows match conditions, data frame rows returned. version_string string length 1 indicates desired version(s). NULL, default, means download versions available db_table_name. c() (empty string) returns zero-row table. version_string invalid, error emitted. collect boolean tells whether download result. Default FALSE. See details. create_matsindf boolean tells whether create matsindf data frame collected data frame. Default value collect, setting collect = TRUE also implies create_matsindf. conn database connection. schema data model (dm object) database conn. Default schema_from_conn(conn = conn). See details. fk_parent_tables named list parent tables foreign keys db_table_name. Default get_all_fk_tables(conn = conn, schema = schema). See details. index_map_name name table serves index row column names. Default \"Index\". index_map index map matrices database conn. Default fk_parent_tables[[index_table_name]]. rctype_table_name name table contains row column types. Default \"matnameRCType\". rctypes table row column types database conn. Default fk_parent_tables[[rctype_table_name]]. matrix_class One \"Matrix\" (default) sparse matrices \"matrix\" (base matrix representation R) non-sparse matrices. matname name matrix name column. Default PFUPipelineTools::mat_meta_cols$matname. matval name matrix value column. Default PFUPipelineTools::mat_meta_cols$matval. rowtype_colname, coltype_colname names row column type columns data frames. Defaults PFUPipelineTools::mat_meta_cols$rowtype PFUPipelineTools::mat_meta_cols$coltype, respectively. valid_from_version_colname, valid_to_version_colname Names columns containing version information. Defaults PFUPipelineTools::dataset_info$valid_from_version_colname PFUPipelineTools::dataset_info$valid_to_version_colname, respectively.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_filter_collect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a table from the database using natural expressions — pl_filter_collect","text":"filtered version db_table_name downloaded conn.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_filter_collect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter a table from the database using natural expressions — pl_filter_collect","text":"schema data model (dm object) CL-PFU database. can obtained calling schema_from_conn(). minimal interaction database desired, sure override default value schema supplying pre-computed dm object. fk_parent_tables named list tables, fk parent tables containing mapping fk values (usually strings) fk keys (usually integers) db_table_name. fk_parent_tables treated store foreign key tables retrieved name needed. appropriate value fk_parent_tables can obtained get_all_fk_tables(). minimal interaction database desired, sure override default value fk_parent_tables supplying pre-computed named list foreign key tables.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate hash of pipeline data — pl_hash","title":"Calculate hash of pipeline data — pl_hash","text":"CL-PFU database pipeline, need ability download data frame database based hash data. function calculates appropriate hash.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate hash of pipeline data — pl_hash","text":"","code":"pl_hash(   .df = NULL,   table_name,   conn,   usual_hash_group_cols = PFUPipelineTools::usual_hash_group_cols,   additional_hash_group_cols = NULL,   keep_single_unique_cols = TRUE,   .table_name_col = PFUPipelineTools::hashed_table_colnames$db_table_name,   .nested_hash_col = PFUPipelineTools::hashed_table_colnames$nested_hash_colname,   .nested_col = PFUPipelineTools::hashed_table_colnames$nested_colname,   tar_group_col = \"tar_group\",   .algo = \"md5\" )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate hash of pipeline data — pl_hash","text":".df -memory data frame stored database NULL table database conn desired. table_name string name table .df stored name table database hashed. conn connection database. Necessary .df NULL (default value). usual_hash_group_cols string vector usual column names preserved hashed data frame. Default PFUPipelineTools::usual_hash_group_cols. additional_hash_group_cols string vector names additional columns .df grouped making .nested_hash_col hash column. additional_hash_group_cols exist data frame table hashed present result. Default NULL, meaning grouping done columns contain 1 unique value. See details. keep_single_unique_cols boolean tells whether keep columns single unique value outgoing hash. Default TRUE. .table_name_col name column output contains table_name. Default PFUPipelineTools::hashed_table_colnames$db_table_name. .nested_hash_col name column output contains hash nested columns. Default PFUPipelineTools::hashed_table_colnames$nested_hash_colname. .nested_col name column output contains nested data. Used internally. Default PFUPipelineTools::hashed_table_colnames$nested_colname. tar_group_col name tar_group column. Default \"tar_group\". .algo algorithm hashing. Default \"md5\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_hash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate hash of pipeline data — pl_hash","text":"data frame \"ticket\" later retrieving data database.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_hash.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate hash of pipeline data — pl_hash","text":"hash two requirements: values change content changes provides sufficient information retrieve data frame database. return value function (special hash database table) serves \"ticket\" data can retrieved database later time using pl_collect_from_hash(). meet requirements hash, return value function following characteristics: first column (named value .table_name_col) contains value table_name, name database table actual data frame stored. last column (right named value .nested_col) contains hash data frame created nesting columns one unique value additional_hash_group_cols (additional_hash_group_cols NULL). second N-1 columns columns one unique value (provided keep_single_unique_cols TRUE columns specified additional_hash_group_cols (provided additional_hash_group_cols NULL, default). keep_single_unique_cols FALSE additional_hash_group_cols NULL, error raised. Hashes can created data frames memory, typically uploaded database. , supply .df data frame. .table_name_column present .df, added internally, filled value table_name. Alternatively, hashes can created table already existing database conn. , leave .df default value (NULL) supply table_name conn arguments. case, SQL query generated hash entire table provided return value. .table_name_column added result downloading. approaches use md5 hashing algorithm. said, two approaches give hashes data frame, due differences way database creates hash vs. R creates hash.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_upload_schema_and_simple_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload a schema and simple tables for the CL-PFU database — pl_upload_schema_and_simple_tables","title":"Upload a schema and simple tables for the CL-PFU database — pl_upload_schema_and_simple_tables","text":"need start , need delete database tables, re-define schema, upload simple tables. function makes easy.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_upload_schema_and_simple_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload a schema and simple tables for the CL-PFU database — pl_upload_schema_and_simple_tables","text":"","code":"pl_upload_schema_and_simple_tables(   schema,   simple_tables,   conn,   set_not_null_constraints = TRUE,   drop_db_tables = FALSE,   .pk_col = PFUPipelineTools::dm_pk_colnames$pk_col )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_upload_schema_and_simple_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload a schema and simple tables for the CL-PFU database — pl_upload_schema_and_simple_tables","text":"schema data model (dm object). simple_tables named list data frames content tables conn. conn DBI connection database. set_not_null_constraints boolean tells whether NULL constraints set foreign key columns schema. Default TRUE. drop_db_tables TRUE, tables conn dropped. character vector, names tables dropped. FALSE (default), tables dropped. existing tables uploading new schema. .pk_col See PFUPipelineTools::dm_pk_colnames.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_upload_schema_and_simple_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload a schema and simple tables for the CL-PFU database — pl_upload_schema_and_simple_tables","text":"remote data model","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_upload_schema_and_simple_tables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upload a schema and simple tables for the CL-PFU database — pl_upload_schema_and_simple_tables","text":"Optionally (setting drop_db_tables = TRUE), deletes existing tables database uploading schema (schema) simple tables (simple_tables). drop_db_tables FALSE default. However, unlikely function succeed unless drop_db_tables set TRUE, uploading data model schema conn fail tables already exist database conn. simple_tables include tables foreign keys, order uploading simple_tables guaranteed. avoid uploading table foreign key parent table containing foreign key values uploaded. set_not_null_constraints controls setting NULL constraints foreign key columns schema. conn's user must superuser privileges.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_upsert.html","id":null,"dir":"Reference","previous_headings":"","what":"Upsert a data frame with optional recoding of foreign keys — pl_upsert","title":"Upsert a data frame with optional recoding of foreign keys — pl_upsert","text":"Upserts (inserts updates, depending whether private keys .df already exist db_table_name) .df db_table_name conn.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_upsert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upsert a data frame with optional recoding of foreign keys — pl_upsert","text":"","code":"pl_upsert(   .df,   conn,   db_table_name = NULL,   additional_hash_group_cols = NULL,   usual_hash_group_cols = PFUPipelineTools::usual_hash_group_cols,   keep_single_unique_cols = TRUE,   in_place = FALSE,   encode_fks = TRUE,   compress = FALSE,   round_double_columns = FALSE,   digits = 15,   index_map =     magrittr::set_names(list(fk_parent_tables[[IEATools::row_col_types$industry]],     fk_parent_tables[[IEATools::row_col_types$product]],     fk_parent_tables[[IEATools::row_col_types$other]]),     c(IEATools::row_col_types$industry, IEATools::row_col_types$product,     IEATools::row_col_types$other)),   retain_zero_structure = FALSE,   schema = schema_from_conn(conn),   fk_parent_tables = get_all_fk_tables(conn = conn, schema = schema, collect = TRUE),   .db_table_name = PFUPipelineTools::hashed_table_colnames$db_table_name,   .pk_col = PFUPipelineTools::dm_pk_colnames$pk_col,   .algo = \"md5\" )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_upsert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upsert a data frame with optional recoding of foreign keys — pl_upsert","text":".df data frame upserted. conn connection CL-PFU database. db_table_name string identifying destination .df conn, .e. name remote database table. Default NULL, meaning value argument taken .db_table_name column .df. additional_hash_group_cols vector list additional columns .df grouped hashing , therefore, appear output. Default NULL. Passed pl_hash(). usual_hash_group_cols vector columns .df grouped hashing , therefore, appear output. Default PFUPipelineTools::additional_hash_group_cols can set NULL disable. Passed pl_hash(). keep_single_unique_cols boolean tells whether keep columns single unique value output. Default TRUE. Passed pl_hash(). in_place boolean tells whether modify database conn. Default FALSE, helpful want chain several requests. encode_fks boolean tells whether code foreign keys .df upserting conn. Default TRUE. compress boolean tells whether compress db_table_name database uploading. Default FALSE. round_double_columns boolean tells whether round double-precision columns .df. Default FALSE. digits integer tells number significant digits. digits effect round_double_columns TRUE. Default 15, eliminate numerical precision errors compress_rows(). index_map list 2 data frames represent mappings inboard row column indices database outboard row column names memory local computer. See documentation encode_matsindf() matsbyname::to_triplet(). Default list contains industry, product, members fk_parent_tables. retain_zero_structure boolean tells whether retain structure zero matrices. See details. schema data model (dm object) database conn. Default dm_from_con(conn, learn_keys = TRUE). See details. fk_parent_tables named list parent tables foreign keys db_table_name. See details. .db_table_name name table name column .df. Default PFUPipelineTools::hashed_table_colnames$db_table_name. .pk_col name primary key column primary key table. See PFUPipelineTools::dm_pk_colnames. .algo hashing algorithm. Default \"md5\".","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_upsert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upsert a data frame with optional recoding of foreign keys — pl_upsert","text":"hash .df according .algo.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/pl_upsert.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upsert a data frame with optional recoding of foreign keys — pl_upsert","text":"function decodes foreign keys (fks), possible, assuming fks integers. non-integers (typically, character strings) provided fk columns .df, non-integers recoded appropriate integer key values. function knows CL-PFU database tables contain matrix information. particular, .df contains matrices, expanded row-col-val format uploading. output function special data frame contains following columns: single-valued columns columns .df, columns given additional_hash_group_cols (default NULL), columns given usual_hash_group_cols (default PFUPipelineTools::usual_hash_group_cols). Hash: column hash non-foreign-key columns. schema data model (dm object) database conn. default value (schema_from_conn(conn)) extracts data model database conn automatically. However, caller already data model, supplying schema argument save time. fk_parent_tables named list tables, one (one named db_table_name) contains foreign keys db_table_name. fk_parent_tables treated store foreign key tables retrieved name needed. default value (calls get_all_fk_tables() collect = TRUE decoding foreign keys done outboard database) retrieves possible foreign key parent tables conn, potentially time-consuming process. speed, pre-compute foreign key parent tables (via get_all_fk_tables(collect = TRUE)) pass list fk_parent_tables argument function. user conn must write access database. default, pl_upsert() delete zero entries matrices upserting. countries years, result missing matrices, U_EIOU. Set retain_zero_structure = TRUE preserve entries zero matrix.","code":""},{"path":[]},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/quasi-quote-assign.html","id":null,"dir":"Reference","previous_headings":"","what":"Assignment — :=","title":"Assignment — :=","text":"See rlang:::= details.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/quasi-quote-assign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assignment — :=","text":"","code":"`:=`(x, y)"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/read_pin_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a version of a pinned CL-PFU database product — read_pin_version","title":"Read a version of a pinned CL-PFU database product — read_pin_version","text":"Read version pinned CL-PFU database product","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/read_pin_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a version of a pinned CL-PFU database product — read_pin_version","text":"","code":"read_pin_version(   pin_name,   database_version,   pin_version_string = PFUSetup::pin_versions(database_version)[[pin_name]],   pipeline_releases_folder = PFUSetup::get_abs_paths()[[\"pipeline_releases_folder\"]] )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/read_pin_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a version of a pinned CL-PFU database product — read_pin_version","text":"pin_name string name pin read. database_version string, prefixed \"v\" version interest. number prefixed \"v\" converted string internally. pin_version_string version string pin pin_name associated database_version. Default pin_versions(database_version)[[pin_name]]. pipeline_releases_folder path pipeline releases folder. Default get_abs_paths()[[\"pipeline_releases_folder\"]].","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/read_pin_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a version of a pinned CL-PFU database product — read_pin_version","text":"pinned object represented name version string.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/read_pin_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a version of a pinned CL-PFU database product — read_pin_version","text":"","code":"if (FALSE) { # \\dontrun{ read_pin_version(pin_name = \"phi_vecs\", database_version = 1.2) |>   head() } # }"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/release_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a single target to a pinboard. — release_target","title":"Save a single target to a pinboard. — release_target","text":"Releases (release = TRUE) (release = FALSE) new version single target targ using pins package.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/release_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a single target to a pinboard. — release_target","text":"","code":"release_target(   pipeline_releases_folder,   targ,   pin_name,   type = \"rds\",   release = FALSE )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/release_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a single target to a pinboard. — release_target","text":"pipeline_releases_folder folder contains pinboard releases pipeline. targ target R object saved pinboard. pin_name name pin pinboard. pin_name key retrieving targ. type type target, routed pins::pin_write(). Default \"rds\". \"csv\" another option. release boolean telling whether release. Default FALSE.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/release_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a single target to a pinboard. — release_target","text":"release TRUE, fully-qualified path name targ file pinboard. release FALSE, string \"Release requested.\"","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/release_target.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save a single target to a pinboard. — release_target","text":"Released versions target can obtained shown examples.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/release_target.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a single target to a pinboard. — release_target","text":"","code":"if (FALSE) { # \\dontrun{ # Establish the pinboard pinboard <- file.path(\"~\",                       \"Dropbox\",                       \"Fellowship 1960-2015 PFU database\",                       \"OutputData\", \"PipelineReleases\") |>   pins::board_folder() # Get information about the `PSUT` target in the pinboard pinboard |>   pins::pin_meta(name = \"psut\") # Find versions of the `PSUT` target pinboard |>   pins::pin_versions(name = \"psut\") # Get the latest copy of the `PSUT` target. my_psut <- pinboard |>   pins::pin_read(name = \"psut\") # Retrieve a previous version of the `PSUT` target. my_old_psut <- pinboard |>   pins::pin_read(name = \"psut\", version = \"20220218T023112Z-1d9e1\") } # }"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/remove_compress_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove the compress function from a database — remove_compress_function","title":"Remove the compress function from a database — remove_compress_function","text":"database conn may compress function installed unpload_compress_function(). R function removes compress function database conn.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/remove_compress_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove the compress function from a database — remove_compress_function","text":"","code":"remove_compress_function(conn)"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/remove_compress_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove the compress function from a database — remove_compress_function","text":"conn connection database compress function removed.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/remove_compress_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove the compress function from a database — remove_compress_function","text":"number rows affected adding function database conn, always 0.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/remove_compress_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove the compress function from a database — remove_compress_function","text":"function can removed owner function, .e., user installed function first instance.","code":""},{"path":[]},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/round_double_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Round double-precision columns — round_double_cols","title":"Round double-precision columns — round_double_cols","text":"uploading data frame Postgres database, times numerical precision prevents compressing table compress_rows(). function rounds double precision columns (integer columns) .df specified precision (digs) can called upserting .df database.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/round_double_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round double-precision columns — round_double_cols","text":"","code":"round_double_cols(.df, digits = 15)"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/round_double_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round double-precision columns — round_double_cols","text":".df data frame whose double-precision columns rounded. digits number digits precision. Default 15, ensure rows identical compress_rows().","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/round_double_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round double-precision columns — round_double_cols","text":"version .df double-precision columns rounded.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/round_double_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round double-precision columns — round_double_cols","text":"","code":"data.frame(name = c(\"pi\", \"pi+1\"),   # Have to make these integers (\"L\")   # so they are left alone.   million = c(1000000L, 1000001L),   pi = c(pi, pi+1)) |>   round_double_cols(digits = 3) #>   name million   pi #> 1   pi 1000000 3.14 #> 2 pi+1 1000001 4.14"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/schema_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data model from an Excel schema table — schema_dm","title":"Create a data model from an Excel schema table — schema_dm","text":"function returns dm object suitable future uploading database.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/schema_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data model from an Excel schema table — schema_dm","text":"","code":"schema_dm(   schema_table,   pk_suffix = PFUPipelineTools::key_col_info$pk_suffix,   .table = PFUPipelineTools::schema_table_colnames$table,   .colname = PFUPipelineTools::schema_table_colnames$colname,   .is_pk = PFUPipelineTools::schema_table_colnames$is_pk,   .coldatatype = PFUPipelineTools::schema_table_colnames$coldatatype,   .fk_table = PFUPipelineTools::schema_table_colnames$fk_table,   .fk_colname = PFUPipelineTools::schema_table_colnames$fk_colname,   .pk_cols = \".pk_cols\" )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/schema_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data model from an Excel schema table — schema_dm","text":"schema_table schema table, typically output load_schema_table(). pk_suffix suffix primary keys. Default \"_ID\". .table, .colname, .is_pk, .coldatatype, .fk_table, .fk_colname See PFUPipelineTools::schema_table_colnames. .pk_cols Column names used internally.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/schema_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data model from an Excel schema table — schema_dm","text":"dm object created schema_table.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/schema_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a data model from an Excel schema table — schema_dm","text":"schema_table assumed data frame following columns: .table: gives table names database. .colname: gives column names table; suffixed pk_suffix, interpreted primary key column. .is_pk: tells .colname primary key .table. .coldatatype: gives data type column, one \"int\", \"boolean\", \"text\", \"double precision\". .fk_table: gives table foreign key can found .fk_colname: gives column name fk.table foreign key can found","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/schema_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a data model from an Excel schema table — schema_dm","text":"","code":"st <- tibble::tribble(~Table, ~Colname, ~IsPK, ~ColDataType, ~FKTable, ~FKColname,                       \"Country\", \"CountryID\", TRUE, \"text\", \"NA\", \"NA\",                       \"Country\", \"Country\", FALSE, \"text\", \"NA\", \"NA\",                       \"Country\", \"Description\", FALSE, \"text\", \"NA\", \"NA\") schema_dm(st) #> Error: .onLoad failed in loadNamespace() for 'dm', details: #>   call: (function (packages, top_level_fun, use = TRUE)  #>   error: The packages \"DiagrammeR\" and \"DiagrammeRsvg\" are required to use #> `register_pkgdown_methods()`."},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/schema_from_conn.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the database schema (a dm object) from a connection — schema_from_conn","title":"Get the database schema (a dm object) from a connection — schema_from_conn","text":"helpful know actual schema use database connection. function provides information. thin wrapper around dm_from_con() package dm enables building documentation website.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/schema_from_conn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the database schema (a dm object) from a connection — schema_from_conn","text":"","code":"schema_from_conn(conn = NULL, table_names = NULL, learn_keys = TRUE)"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/schema_from_conn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the database schema (a dm object) from a connection — schema_from_conn","text":"conn DBI::DBIConnection. table_names character vector names tables include. NULL (default) means return tables conn. learn_keys boolean tells whether include definition primary final keys return value. Default TRUE.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/schema_from_conn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the database schema (a dm object) from a connection — schema_from_conn","text":"dm object.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/schema_table_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Column names in schema tables — schema_table_colnames","title":"Column names in schema tables — schema_table_colnames","text":"string list names columns schema tables.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/schema_table_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column names in schema tables — schema_table_colnames","text":"","code":"schema_table_colnames"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/schema_table_colnames.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Column names in schema tables — schema_table_colnames","text":"string list 6 entries. table name string column tells database table name. colname name string column identifies column table. is_pk name boolean column tells whether column primary key. coldatatype name string column tells data type column, \"int\", \"text\", \"boolean\", \"double precision\". fk_table name string column identifies table foreign key can found. \"NA\" valid value fk_table, meaning colname foreign key. fk_colname name string column identifies name column fk_table contains values foreign key. \"NA\" valid value fk_colname, meaning colname foreign key.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/schema_table_colnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Column names in schema tables — schema_table_colnames","text":"","code":"schema_table_colnames #> $table #> [1] \"Table\" #>  #> $colname #> [1] \"Colname\" #>  #> $is_pk #> [1] \"IsPK\" #>  #> $coldatatype #> [1] \"ColDataType\" #>  #> $fk_table #> [1] \"FKTable\" #>  #> $fk_colname #> [1] \"FKColname\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/self_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Self-name a list — self_name","title":"Self-name a list — self_name","text":"using native pipe operator, sometimes convenient self-name vector list, especially later use lapply() friends.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/self_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Self-name a list — self_name","text":"","code":"self_name(x)"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/self_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Self-name a list — self_name","text":"x character vector list character strings self-named.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/self_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Self-name a list — self_name","text":"self-named version x.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/self_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Self-name a list — self_name","text":"Internally, function calls magrittr::set_names(x, x).","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/self_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Self-name a list — self_name","text":"","code":"c(\"a\", \"b\", \"c\") |>   self_name() #>   a   b   c  #> \"a\" \"b\" \"c\"  list(\"A\", \"B\", \"C\") |>   self_name() #> $A #> [1] \"A\" #>  #> $B #> [1] \"B\" #>  #> $C #> [1] \"C\" #>"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/set_not_null_constraints_on_fk_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Set NOT NULL constraints on foreign key columns — set_not_null_constraints_on_fk_cols","title":"Set NOT NULL constraints on foreign key columns — set_not_null_constraints_on_fk_cols","text":"maintain integrity data database, important enforce NULL constraints foreign key columns. function adds NULL constraints every foreign key column schema.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/set_not_null_constraints_on_fk_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set NOT NULL constraints on foreign key columns — set_not_null_constraints_on_fk_cols","text":"","code":"set_not_null_constraints_on_fk_cols(   schema,   conn,   .child_table = PFUPipelineTools::dm_fk_colnames$child_table,   .child_fk_cols = PFUPipelineTools::dm_fk_colnames$child_fk_cols )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/set_not_null_constraints_on_fk_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set NOT NULL constraints on foreign key columns — set_not_null_constraints_on_fk_cols","text":"schema dm object describing schema database conn. conn database connection. .child_table, .child_fk_cols See PFUPpipelineTools::dm_fk_colnames.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/set_not_null_constraints_on_fk_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set NOT NULL constraints on foreign key columns — set_not_null_constraints_on_fk_cols","text":"NULL silently.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/tar_ungroup.html","id":null,"dir":"Reference","previous_headings":"","what":"Ungroups and removes tar_group column from a data frame — tar_ungroup","title":"Ungroups and removes tar_group column from a data frame — tar_ungroup","text":"tarchetypes::tar_group_by() function adds column named \"tar_group\". function ungroups removes special column optionally removes dplyr groups, .","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/tar_ungroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ungroups and removes tar_group column from a data frame — tar_ungroup","text":"","code":"tar_ungroup(.df, tar_group_colname = \"tar_group\", ungroup = TRUE)"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/tar_ungroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ungroups and removes tar_group column from a data frame — tar_ungroup","text":".df data frame targets grouping removed. tar_group_colname name grouping column. Default \"tar_group\". ungroup boolean tells whether ungroup (dplyr sense, targets sense) .df. Default TRUE.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/tar_ungroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ungroups and removes tar_group column from a data frame — tar_ungroup","text":"modified version .df.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/update_schema_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a schema table in a database. — update_schema_table","title":"Update a schema table in a database. — update_schema_table","text":"sometimes necessary update schema table database. need can arise additional rows added Index table, example. function helps process.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/update_schema_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a schema table in a database. — update_schema_table","text":"","code":"update_schema_table(   dbname,   db_table_name,   input_data_version,   project_path = file.path(\"~\", \"OneDrive\", \"OneDrive - University of Leeds\",     \"Fellowship 1960-2015 PFU database research\"),   input_data_path = file.path(project_path, \"InputData\", input_data_version),   schema_path = file.path(input_data_path, \"SchemaAndFKTables.xlsx\"),   schema_sheet = \"Schema\",   table_colname = \"Table\",   is_pk_colname = \"IsPK\",   colname_colname = \"Colname\",   drv = RPostgres::Postgres(),   host = \"mexer.site\",   port = 6432,   user = \"dbcreator\",   conn = DBI::dbConnect(drv = drv, dbname = dbname, host = host, port = port, user =     user) )"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/update_schema_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a schema table in a database. — update_schema_table","text":"dbname name database table updated. db_table_name name table update. input_data_version string representing version input data used. project_path path schema excel file. Default OneDrive folder project. input_data_path path project_path input data folder. schema_path path input_data_path schema file. schema_sheet name schema sheet schema file. Default \"Schema\". table_colname, is_pk_colname, colname_colname Names table, isPK, colname columns schema table. Defaults \"Table\", \"IsPK\", \"Colname\", respectively. drv database driver used. Default RPostgres::Postgres(). host host database. Default \"mexer.site\". port port accessing database. Default 6432. user user database. Default \"dbcreator\". conn connection database. Default created drv, dbname, host, port, user arguments.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/update_schema_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a schema table in a database. — update_schema_table","text":"TRUE successful","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/upload_beatles.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload a small database of Beatles information — upload_beatles","title":"Upload a small database of Beatles information — upload_beatles","text":"Used testing.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/upload_beatles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload a small database of Beatles information — upload_beatles","text":"","code":"upload_beatles(conn)"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/upload_beatles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload a small database of Beatles information — upload_beatles","text":"conn connection Postgres database. user must write permission.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/upload_beatles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload a small database of Beatles information — upload_beatles","text":"list tables containing Beatles information","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/usual_hash_group_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Usual columns to be preserved when hashing target uploads — usual_hash_group_cols","title":"Usual columns to be preserved when hashing target uploads — usual_hash_group_cols","text":"string list containing names usual columns preserve upload, addition columns contain one unique value.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/usual_hash_group_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Usual columns to be preserved when hashing target uploads — usual_hash_group_cols","text":"","code":"usual_hash_group_cols"},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/usual_hash_group_cols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Usual columns to be preserved when hashing target uploads — usual_hash_group_cols","text":"string list 9 entries. dataset string name dataset column. table_name string name table name column. country string name country column. method string name method column. year string name year column. last_stage string name last_stage column. energy_type string name energy_type column. tar_group string name tar_group column.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/reference/usual_hash_group_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Usual columns to be preserved when hashing target uploads — usual_hash_group_cols","text":"","code":"usual_hash_group_cols #>       dataset    table_name       country        method          year  #>     \"Dataset\" \"DBTableName\"     \"Country\"      \"Method\"        \"Year\"  #>    last_stage   energy_type  includes_neu     tar_group  #>   \"LastStage\"  \"EnergyType\" \"IncludesNEU\"   \"tar_group\""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/news/index.html","id":"pfupipelinetools-0113-2025-05-15","dir":"Changelog","previous_headings":"","what":"PFUPipelineTools 0.1.13 (2025-05-15)","title":"PFUPipelineTools 0.1.13 (2025-05-15)","text":"pl_upsert() gains new arguments round_double_columns digits calls round_double_cols() requested. round_double_cols() rounds double-precision columns data frame assist compress() function database. pl_upsert() gains new argument compress, defaults FALSE. set TRUE, compress_rows() called internally within pl_upsert(). New functions install_compress_function(), remove_compress_function(), compress_rows() assist compressing rows remote database. pl_filter_collect() gains new argument ... filtering expressions can placed. ... replaces myriad arguments provided filtering possible columns. breaking change, new approach provides significant flexibility users function. Plus, code much cleaner inside pl_filter_collect()! several places, code longer passes conn schema fk_parent_tables known. Added safety check pl_destroy() disable destroying “MexerDB”. pl_collect_from_hash() pl_filter_collect() gain new argument version_string provides capability filter downloads version. default value (NULL) downloads versions. Multiple versions can downloaded passing vector strings. Supplying c() (empty vector) downloads table rows. pl_collect_from_hash() now convenient default arguments schema fk_parent_tables pull values conn. new behavior pl_collect_from_hash() now consistent pl_filter_collect(). Now 233 tests, passing Test coverage now reported 25.27%, ’s undercount. Many (?) functions tested continuous integration platforms CRAN.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/news/index.html","id":"pfupipelinetools-0112-2024-12-09-doi","dir":"Changelog","previous_headings":"","what":"PFUPipelineTools 0.1.12 (2024-12-09)","title":"PFUPipelineTools 0.1.12 (2024-12-09)","text":"Improved defaults arguments pl_filter_collect(). Still 143 tests, passing Test coverage now reported 27.37%","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/news/index.html","id":"pfupipelinetools-0111-2024-12-09","dir":"Changelog","previous_headings":"","what":"PFUPipelineTools 0.1.11 (2024-12-09)","title":"PFUPipelineTools 0.1.11 (2024-12-09)","text":"Updates many accessing functions database. Now 143 tests, passing Test coverage now 92.73%","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/news/index.html","id":"pfupipelinetools-0110-2024-08-01","dir":"Changelog","previous_headings":"","what":"PFUPipelineTools 0.1.10 (2024-08-01)","title":"PFUPipelineTools 0.1.10 (2024-08-01)","text":"Eliminated IEAMW column everywhere. Dataset column now work IEAMW column.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/news/index.html","id":"pfupipelinetools-019-2024-07-30","dir":"Changelog","previous_headings":"","what":"PFUPipelineTools 0.1.9 (2024-07-30)","title":"PFUPipelineTools 0.1.9 (2024-07-30)","text":"Added new “date” option foreign key columns. Now using “value” column instead “x”. Now allowing foreign key tables contain ID column foreign key column. particularly useful , e.g., energy type table: EnergyTypeID EnergyType FullName Description 1 E Energy Energy thermal quantification energy. 2 X Exergy Exergy work quantification energy. pl_filter_collect() load_schema_table() load_fk_tables() schema_dm() pl_upload_schema_and_simple_tables() set_not_null_constraints_on_fk_cols() pl_upsert() encode_fks() decode_fks() encode_fk_values() encode_fk_keys() Removed stash_cache() associated tests. longer save pipeline cache. seemed like good idea time, never looked saved caches. New function self_name() helpful many places. Several new functions assist database schema, etc.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/news/index.html","id":"pfupipelinetools-018-2023-12-21-doi","dir":"Changelog","previous_headings":"","what":"PFUPipelineTools 0.1.8 (2023-12-21)","title":"PFUPipelineTools 0.1.8 (2023-12-21)","text":"Added statement need README.Rmd. Still 24 tests, passing. Test coverage remains 100%.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/news/index.html","id":"pfupipelinetools-017-2023-12-08-doi","dir":"Changelog","previous_headings":"","what":"PFUPipelineTools 0.1.7 (2023-12-08)","title":"PFUPipelineTools 0.1.7 (2023-12-08)","text":"Added package dependencies test coverage workflow. Still 24 tests, passing. Test coverage remains 100%.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/news/index.html","id":"pfupipelinetools-016-2023-12-04-doi","dir":"Changelog","previous_headings":"","what":"PFUPipelineTools 0.1.6 (2023-12-04)","title":"PFUPipelineTools 0.1.6 (2023-12-04)","text":"Add package dependencies code coverage GitHub action. Still 24 tests, passing. Test coverage remains 100%.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/news/index.html","id":"pfupipelinetools-015-2023-12-04-doi","dir":"Changelog","previous_headings":"","what":"PFUPipelineTools 0.1.5 (2023-12-04)","title":"PFUPipelineTools 0.1.5 (2023-12-04)","text":"Add develop release-* branches GitHub actions R-CMD-CHECK. Still 24 tests, passing. Test coverage remains 100%.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/news/index.html","id":"pfupipelinetools-014-2023-12-03","dir":"Changelog","previous_headings":"","what":"PFUPipelineTools 0.1.4 (2023-12-03)","title":"PFUPipelineTools 0.1.4 (2023-12-03)","text":"Attempting fix bug continuous integration process. Builds failing due missing external dependencies. Still 24 tests, passing. Test coverage remains 100%.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/news/index.html","id":"pfupipelinetools-013-2023-12-03-doi","dir":"Changelog","previous_headings":"","what":"PFUPipelineTools 0.1.3 (2023-12-03)","title":"PFUPipelineTools 0.1.3 (2023-12-03)","text":"New function read_pin_version() Added GitHub actions generating website. Beginning code coverage support. Still 24 tests, passing. Test coverage remains 100%.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/news/index.html","id":"pfupipelinetools-012-2023-08-08-doi","dir":"Changelog","previous_headings":"","what":"PFUPipelineTools 0.1.2 (2023-08-08)","title":"PFUPipelineTools 0.1.2 (2023-08-08)","text":"First release assigned Zenodo DOI. Added several new tests get 100% coverage.","code":""},{"path":"https://energyeconomydecoupling.github.io/PFUPipelineTools/news/index.html","id":"pfupipelinetools-011-2023-06-06","dir":"Changelog","previous_headings":"","what":"PFUPipelineTools 0.1.1 (2023-06-06)","title":"PFUPipelineTools 0.1.1 (2023-06-06)","text":"Initial release Added NEWS.md file track changes package. 2 tests, passing. Test coverage low (17 %) improve.","code":""}]
