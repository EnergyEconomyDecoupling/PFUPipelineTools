% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/schema.R
\name{pl_upsert}
\alias{pl_upsert}
\title{Upsert a data frame with optional recoding of foreign keys}
\usage{
pl_upsert(.df, remote_table_name, conn)
}
\arguments{
\item{.df}{The data frame to be upserted.}

\item{remote_table_name}{A string identifying the destination for \code{.df},
the name of a remote database table in \code{conn}.}

\item{conn}{A connection to the CL-PFU database.}
}
\value{
A special hash of \code{.df}. See details.
}
\description{
Upserts
(inserts or updates,
depending on whether the information already exists in \code{remote_table})
\code{.df} into \code{remote_table} at \code{conn}.
This function decodes foreign keys, when possible,
by assuming that all keys are integers.
If non-integers are provided in foreign key columns of \code{.df},
the non-integers will be recoded to the integer key values.
Thus, this function assumes that the data model and schema
already exists in \code{conn}.
}
\details{
This function knows about CL-PFU database tables that contain
matrix information.
In particular, if \code{.df} contains matrices,
they are expanded into row-col-val format
before uploading.

The output of this function is a special data frame that
contains the following columns:

\if{html}{\out{<div class="sourceCode">}}\preformatted{* CLPFUDBTable: A column of character strings, all with the value of `remote_table`.
* All foreign key columns: With their integer values (to save space).
* Hash: A column with a hash of all non-foreign-key columns.
}\if{html}{\out{</div>}}

The user in \code{conn} must have write access to the database.
}
\seealso{
\code{pl_download()} for the reverse operation.
\code{upload_schema_and_simple_tables()} for a way to establish the database schema.
}
