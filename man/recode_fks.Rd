% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/schema.R
\name{recode_fks}
\alias{recode_fks}
\title{Recode foreign keys in a data frame to be uploaded}
\usage{
recode_fks(
  .df,
  remote_table_name,
  conn,
  schema = dm::dm_from_con(conn, learn_keys = TRUE)
)
}
\arguments{
\item{.df}{The data frame about to be uploaded.}

\item{remote_table_name}{The string name of the remote table in \code{conn} where \code{.df} is to be uploaded.}

\item{conn}{The connection in which \code{remote_table_name} resides.}

\item{schema}{The data model (\code{dm} object) for the database in \code{conn}.
Default is \code{dm::dm_from_con(conn, learn_keys = TRUE)}.
See details.}
}
\value{
A version of \code{.df} with foreign key columns guaranteed to be integers.
}
\description{
In the CL-PFU pipeline,
we allow data frames about to be uploaded
to have foreign key values (not integers)
in foreign key columns.
This function translates the foreign key values
to integers.
}
\details{
\code{schema} is a data model (\code{dm} object) for the database in \code{conn}.
Its default value (\code{dm::dm_from_con(conn, learn_keys = TRUE)})
extracts the data model for the database at \code{conn} automatically.
However, if the caller already has the data model,
supplying it in the \code{schema} argument will save time.

If any values in a foreign key column of \code{.df}
does not have a corresponding integer,
an error is thrown.
}
