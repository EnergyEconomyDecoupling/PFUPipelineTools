% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/schema.R
\name{encode_fks}
\alias{encode_fks}
\title{Encode foreign keys in a data frame to be uploaded}
\usage{
encode_fks(
  .df,
  db_table_name,
  schema,
  fk_parent_tables,
  .child_table = PFUPipelineTools::dm_fk_colnames$child_table,
  .child_fk_cols = PFUPipelineTools::dm_fk_colnames$child_fk_cols,
  .parent_table = PFUPipelineTools::dm_fk_colnames$parent_table,
  .parent_key_cols = PFUPipelineTools::dm_fk_colnames$parent_key_cols,
  .pk_suffix = PFUPipelineTools::key_col_info$pk_suffix
)
}
\arguments{
\item{.df}{The data frame about to be uploaded.}

\item{db_table_name}{The string name of the database table where \code{.df} is to be uploaded.}

\item{schema}{The data model (\code{dm} object) for the database in \code{conn}.
See details.}

\item{fk_parent_tables}{A named list of all parent tables
for the foreign keys in \code{db_table_name}.
See details.}

\item{.child_table, .child_fk_cols, .parent_table, .parent_key_cols}{See \code{PFUPipelineTools::dm_fk_colnames}.}

\item{.pk_suffix}{See \code{PFUPipelineTools::key_col_info}.}
}
\value{
A version of \code{.df} with fk values (often strings)
replaced by fk keys (integers).
}
\description{
In the CL-PFU pipeline,
we allow data frames about to be uploaded
to the database
to have foreign key values (usually strings)
instead of foreign keys (integers)
in foreign key columns.
This function translates the fk values
to fk keys.
}
\details{
\code{schema} is a data model (\code{dm} object) for the CL-PFU database.
It can be obtained from code such as
\verb{dm::dm_from_con(con = << a database connection >>, learn_keys = TRUE)}.

\code{fk_parent_tables} is a named list of tables,
some of which are fk parent tables containing
the mapping between fk values (usually strings)
and fk keys (usually integers)
for \code{db_table_name}.
\code{fk_parent_tables} is treated as a store from which foreign key tables
are retrieved by name when needed.
An appropriate value for \code{fk_parent_tables} can be obtained
from \code{get_all_fk_tables()}.

If \code{.df} contains no foreign key columns,
\code{.df} is returned unmodified.
}
\seealso{
\code{\link[=decode_fks]{decode_fks()}} for the inverse operation,
albeit for all keys, primary and foreign.
}
